{"ast":null,"code":"import _slicedToArray from\"/Users/mina/Desktop/tax_calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createRef}from\"react\";import\"../../App.css\";import DisplayTax from\"../displaytax.js\";/*global chrome*/ //I'm not sure if to use useRef or createRef\nvar fakeSavedList=[{rate:0.08,name:\"home\",region:\"Ithaca\",zipCode:\"14850\"},{rate:0.09,name:\"scl\",region:\"Ithaca2\",zipCode:\"12345\"}];export default function NewInputBox(){var inputBoxRef=React.createRef();var searchContainerRef=React.createRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),zipcode=_useState2[0],setZipcode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),save=_useState4[0],setSave=_useState4[1];//   useEffect(() => {\n//     chrome.storage.sync.get('currentTax', function(result) {\n//       console.log(\"get dat is called\");\n//         console.log('Value currently is ' + result.currentTax);\n//         console.log(result)\n//         console.log(result.currentTax)\n//         if (result.currentTax!==undefined){\n//           setZipcode(result.currentTax.zip);\n//           setSave(null);\n//         }\n//       });\n//   },[]);\nuseEffect(function(){if(save||save===null){searchContainerRef.current.classList.replace('green-outline','no-outline');//inputBoxRef.current.removeEventListener(\"keyup\")\n}if(save===false){// inputBoxRef.current.\n//   }\n// })\n}},[save]);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),animation=_useState6[0],setAnimation=_useState6[1];var handleOnChange=function handleOnChange(event){//console.log(\"animation\", animation);\nvar input=event.currentTarget.value;var returnInput=maxFive(input);setZipcode(onlyNum(returnInput));};var handleSubmit=function handleSubmit(event){setSave(true);};var optionClick=function optionClick(event){//change the textbox to match the saved data\nconsole.log(\"option click\");setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value);//setZipcode(event.target.attrbutes['data-zip'])\nsetSave(true);};function make_htmlList(){console.log(\"make html is called\");var html=[];fakeSavedList.forEach(function(element){var savedButt=/*#__PURE__*/React.createElement(\"button\",{className:\"savedOptions\",\"data-zip\":element.zipCode,\"data-region\":element.region,\"data-rate\":element.rate,onClick:optionClick},/*#__PURE__*/React.createElement(\"span\",null,element.name),/*#__PURE__*/React.createElement(\"span\",null,element.zipCode));html.push(savedButt);});html.push(/*#__PURE__*/React.createElement(\"button\",null,\"Add/edit saved zip\"));return html;}var focusInput=function focusInput(event){inputBoxRef.current.focus();};var handleFocus=function handleFocus(event){searchContainerRef.current.classList.replace('no-outline','green-outline');setSave(false);event.currentTarget.addEventListener(\"keyup\",function(event){if(zipcode!==''&&event.keyCode===13){setSave(true);}});};/* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/function onlyNum(text){var lastChar=text.slice(-1);var ascii=lastChar.charCodeAt(0);if(48<=ascii&&ascii<=57){return text;}else{return text.slice(0,-1);}}function maxFive(text){if(text.length>5){setAnimation(\"shake\");console.log(\"text is longer than 5 characters\");console.log(\"animation 1:\",animation);setTimeout(function(){setAnimation();console.log(\"animation 2:\",animation);},200);return text.slice(0,5);}return text;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"label\",null,\"Zipcode \\xA0\"),/*#__PURE__*/React.createElement(\"div\",{className:\"multisearch-container no-outline\",ref:searchContainerRef},/*#__PURE__*/React.createElement(\"div\",{className:\"searchBar-container normal\"},/*#__PURE__*/React.createElement(\"input\",{ref:inputBoxRef,className:\"zip-input\",type:\"text\",maxLength:\"6\",height:\"3\",value:zipcode,size:\"10\",onChange:handleOnChange,onFocus:handleFocus}),save||save===null?/*#__PURE__*/React.createElement(\"button\",{className:\"glass-icon glass-grey\",onClick:focusInput}):/*#__PURE__*/React.createElement(\"button\",{className:\"glass-icon glass-green\",onClick:handleSubmit})),/*#__PURE__*/React.createElement(\"div\",{className:\"search-option-container\"},save||save===null?'':make_htmlList())));}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx"],"names":["React","useState","useEffect","createRef","DisplayTax","fakeSavedList","rate","name","region","zipCode","NewInputBox","inputBoxRef","searchContainerRef","zipcode","setZipcode","save","setSave","current","classList","replace","animation","setAnimation","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleSubmit","optionClick","console","log","attributes","getNamedItem","make_htmlList","html","forEach","element","savedButt","push","focusInput","focus","handleFocus","addEventListener","keyCode","text","lastChar","slice","ascii","charCodeAt","length","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\n/*global chrome*/\n\n//I'm not sure if to use useRef or createRef\n\nconst fakeSavedList = [{rate:0.08, name:\"home\", region:\"Ithaca\",zipCode:\"14850\"}, {rate:0.09, name:\"scl\", region:\"Ithaca2\",zipCode:\"12345\"}]\n\n\nexport default function NewInputBox() {\n\n  const inputBoxRef = React.createRef()\n  const searchContainerRef = React.createRef()\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n//   useEffect(() => {\n//     chrome.storage.sync.get('currentTax', function(result) {\n//       console.log(\"get dat is called\");\n//         console.log('Value currently is ' + result.currentTax);\n//         console.log(result)\n//         console.log(result.currentTax)\n//         if (result.currentTax!==undefined){\n//           setZipcode(result.currentTax.zip);\n//           setSave(null);\n//         }\n//       });\n//   },[]);\n\n  \n  \n  useEffect(()=>{\n    if (save|| save===null){\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline')\n      //inputBoxRef.current.removeEventListener(\"keyup\")\n    }\n    if (save===false){\n      // inputBoxRef.current.\n      //   }\n      // })\n      \n    }\n    \n\n  },[save])\n\n\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = (event) => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = (event) => {\n    setSave(true);\n  };\n\n  const optionClick = (event) =>{\n    //change the textbox to match the saved data\n    console.log(\"option click\")\n    \n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value)\n    //setZipcode(event.target.attrbutes['data-zip'])\n    setSave(true)\n  }\n\n  function make_htmlList(){\n    console.log(\n      \"make html is called\"\n    )\n    let html= [];\n    fakeSavedList.forEach(element => {\n      const savedButt = <button className=\"savedOptions\" data-zip={element.zipCode} data-region={element.region} data-rate={element.rate} onClick={optionClick}><span>{element.name}</span><span>{element.zipCode}</span></button>\n      html.push(savedButt);\n    });\n    html.push(<button>Add/edit saved zip</button>)\n \n    return html\n  }\n  const focusInput = (event) => {\n    inputBoxRef.current.focus()\n\n  }\n  const handleFocus = (event) => {\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function(event) {\n         if (zipcode!=='' && event.keyCode === 13){\n           setSave(true)\n         }})\n \n  };\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\")\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n  return (\n    \n    \n    <>\n      <label>Zipcode &#160;</label>\n      <div className = \"multisearch-container no-outline\" ref={searchContainerRef}>\n      <div className=\"searchBar-container normal\">\n              <input\n                  ref={inputBoxRef}\n                  className = \"zip-input\"\n                  type=\"text\"\n                  maxLength=\"6\"\n                  height = \"3\"\n                  value={zipcode}\n                  size=\"10\"\n                  onChange={handleOnChange}\n                  onFocus={handleFocus}\n                  \n                />\n\n                \n                {save|| save===null ? <button className=\"glass-icon glass-grey\" onClick={focusInput}></button> : <button className=\"glass-icon glass-green\"onClick={handleSubmit}></button>}\n                </div>\n                <div className=\"search-option-container\">{save|| save===null ? '':make_htmlList()}</div>\n\n                </div>\n    \n      \n\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {/* {save|| save===null ? \"\" : <button onClick={handleSubmit}>Submit</button>} */}\n      {/* </form> */}\n      {/* <DisplayTax save={save} zipcode={zipcode}></DisplayTax> */}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}