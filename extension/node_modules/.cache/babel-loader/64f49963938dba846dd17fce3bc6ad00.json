{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/extension/src/components/manageZip.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\";\nexport default function ManageZip(props) {\n  const [savedZip, setLocalSavedZip] = useState({});\n  useEffect(() => {\n    console.log(\"in use effect edit zip click\");\n\n    if (props.editZipClick) {\n      setLocalSavedZip(props.savedZip);\n      console.log(\"savedzip in manage\", savedZip);\n    }\n  }, [props.editZipClick]);\n\n  const addEditZip = (zip, editedObj) => {\n    console.log(\"add zip edit call\");\n    savedZip[zip] = editedObj;\n    console.log(\"new sldkfiew\", savedZip);\n    setLocalSavedZip(savedZip);\n  };\n\n  if (props.editZipClick) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(SaveZipList, {\n      savedZip: savedZip,\n      editLocalZip: addEditZip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, \"cancel\")));\n  } else {\n    return null;\n  }\n}\n\nfunction EditCard(props) {\n  const [editing, changeEditState] = useState(props.editing);\n  const [zipcode, setZipcode] = useState(props.zipcode ? props.zipcode : '');\n  const [name, setName] = useState(props.name ? props.name : '');\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleNameChange = event => {\n    const input = event.currentTarget.value;\n    console.log(\"name input\", input);\n    setName(input);\n  };\n\n  const onSave = event => {\n    if (zipcode !== '') {\n      changeEditState(false);\n      props.onSave(zipcode, {\n        name: name\n      });\n    } else {\n      window.alert(\"zipcode can not be empty\"); // need a better way to show this}\n    }\n  };\n\n  const handleEditClicked = event => {\n    changeEditState(true);\n  };\n  /* Extract only numbers out of input box and returns a string of text \n     containing at most 6 numbers\n     Parameter: text is a string\n     Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      //   setAnimation(\"shake\");\n      //   console.log(\"text is longer than 5 characters\")\n      //   console.log(\"animation 1:\", animation);\n      //   setTimeout(function () {\n      //     setAnimation();\n      //     console.log(\"animation 2:\", animation);\n      //   }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  if (props.zipcode === null) {\n    changeEditState(true);\n  }\n\n  if (!editing) {\n    console.log(\"not editing create in edit card\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input card-input-readonly\",\n      type: \"text\",\n      placeholder: \"name this zipcode\",\n      value: name,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input card-input-readonly\",\n      placeholder: \"zipcode xxxxx\",\n      readOnly: true,\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleEditClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 3\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  } else {\n    console.log(\" editing create in edit card\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input\",\n      type: \"text\",\n      value: name,\n      placeholder: \"name this zipcode\",\n      onChange: handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input\",\n      onChange: handleOnChange,\n      placeholder: \"zipcode xxxxx\",\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 3\n      }\n    }, \"save\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  }\n}\n\nfunction SaveZipList(props) {\n  const [adding, setAddingState] = useState(false);\n\n  const addClick = () => {\n    setAddingState(true);\n  };\n\n  const onNewSave = (zip, editedObj) => {\n    setAddingState(false);\n    props.editLocalZip(zip, editedObj);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(\"before looping over zip in List\", props.savedZip), /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(props.savedZip).map(zip => {\n    console.log(\"in edit\", zip);\n    return /*#__PURE__*/React.createElement(EditCard, {\n      zipcode: zip,\n      name: props.savedZip[zip].name,\n      editing: false,\n      onSave: props.editLocalZip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    });\n  })), adding ? /*#__PURE__*/React.createElement(EditCard, {\n    zipcode: '',\n    name: '',\n    editing: true,\n    onSave: onNewSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 91\n    }\n  }, \"add\"));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/extension/src/components/manageZip.js"],"names":["React","useState","useEffect","createRef","ManageZip","props","savedZip","setLocalSavedZip","console","log","editZipClick","addEditZip","zip","editedObj","EditCard","editing","changeEditState","zipcode","setZipcode","name","setName","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleNameChange","onSave","window","alert","handleEditClicked","text","lastChar","slice","ascii","charCodeAt","length","SaveZipList","adding","setAddingState","addClick","onNewSave","editLocalZip","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\"\n\nexport default function ManageZip(props) {\n\tconst [savedZip, setLocalSavedZip] = useState({})\n\tuseEffect(() => {\n\t\tconsole.log(\"in use effect edit zip click\")\n\t\tif (props.editZipClick){\n\n\t\t\tsetLocalSavedZip(props.savedZip)\n\t\t\t\n\t\t\tconsole.log(\"savedzip in manage\",savedZip)\n\t\t}\n\t\t\n\t},[props.editZipClick])\n\n\tconst addEditZip = (zip, editedObj)=>{\n\t\tconsole.log(\"add zip edit call\")\n\t\tsavedZip[zip] = editedObj\n\t\tconsole.log(\"new sldkfiew\", savedZip)\n\t\tsetLocalSavedZip(savedZip)\n\t}\n\n\tif (props.editZipClick){\n\t\t\n\t\t\n\treturn (\n\n\t\t<>\n\t\t<div className=\"edit-window\">\n\t\t\t<SaveZipList savedZip={savedZip} editLocalZip={addEditZip}></SaveZipList>\n\t\t\t<button>done</button>\n\t\t\t<button>cancel</button>\n\t\t</div>\n\t\t</>\n\t)}\n\t\n\telse{ return null}\n\n}\n\n\n\nfunction EditCard(props){\n\tconst [editing, changeEditState]= useState(props.editing);\n\tconst [zipcode, setZipcode] = useState(props.zipcode?props.zipcode:'')\n\tconst [name, setName]= useState(props.name?props.name:'')\n\n\tconst handleOnChange = (event) => {\n\t\t//console.log(\"animation\", animation);\n\t\tconst input = event.currentTarget.value;\n\t\tconst returnInput = maxFive(input);\n\t\tsetZipcode(onlyNum(returnInput));\n\t  };\n\n\tconst handleNameChange = (event) =>{\n\t\tconst input = event.currentTarget.value;\n\t\tconsole.log(\"name input\", input)\n\t\t\n\t\tsetName(input)\n\t}\n\n\tconst onSave = (event) => {\n\t\tif(zipcode !==''){\n\t\tchangeEditState(false)\n\t\tprops.onSave(zipcode,{name:name})\n\t\t}\n\t\telse{window.alert(\"zipcode can not be empty\")// need a better way to show this}\n\t}\n}\n\n\tconst handleEditClicked = (event) =>{\n\t\tchangeEditState(true)\n\n\t}\n\n\t/* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n    //   setAnimation(\"shake\");\n    //   console.log(\"text is longer than 5 characters\")\n    //   console.log(\"animation 1:\", animation);\n    //   setTimeout(function () {\n    //     setAnimation();\n    //     console.log(\"animation 2:\", animation);\n    //   }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n\tif (props.zipcode ===null){\n\t\tchangeEditState(true)\n\t}\n\tif (!editing){\n\t\tconsole.log(\"not editing create in edit card\")\n\t\treturn (\n\t\t<div className=\"edit-zip-card\">\n\t\t<label htmlFor=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input card-input-readonly\" type=\"text\" placeholder='name this zipcode' value={name} readOnly/>\n\t\t<label htmlFor=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input card-input-readonly\" placeholder='zipcode xxxxx' readOnly value={zipcode}/>\n\t\t<button onClick={handleEditClicked}>edit</button>\n\t\t<button>remove</button>\n\t\t</div>\n\t\t)}\n\n\telse {\n\t\tconsole.log(\" editing create in edit card\")\n\treturn(\n\t\t<div className=\"edit-zip-card\">\n\t\t<label htmlFor=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input\" type=\"text\" value={name}  placeholder='name this zipcode' onChange ={handleNameChange}/>\n\t\t<label htmlFor=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input\" onChange={handleOnChange} placeholder='zipcode xxxxx' value={zipcode}/>\n\t\t<button onClick={onSave}>save</button>\n\t\t<button>remove</button>\n\t\t</div>\n\t)}\n\n\t\n\n\n}\n\nfunction SaveZipList(props){\n\tconst [adding, setAddingState]= useState(false)\n\tconst addClick = () =>{\n\t\tsetAddingState(true)\n\n\t}\n\tconst onNewSave = (zip, editedObj)=>{\n\t\tsetAddingState(false)\n\t\tprops.editLocalZip(zip, editedObj)\n\t}\n\treturn (\n\t\t<>\n\t\t{console.log(\"before looping over zip in List\",props.savedZip)}\n\t\t<>{Object.keys(props.savedZip).map(zip => {\n\t\t\tconsole.log(\"in edit\", zip)\n\t\t\treturn <EditCard zipcode={zip} name= {props.savedZip[zip].name} editing={false} onSave={props.editLocalZip}></EditCard>\n\t\t\t\n\t\t})}</>\n\t\t{adding?<EditCard zipcode={''} name={''} editing={true} onSave={onNewSave}></EditCard>: <button onClick={addClick}>add</button> }\n\t\t\n\t\t</>\n\t\n\t)\n\n}\n"]},"metadata":{},"sourceType":"module"}