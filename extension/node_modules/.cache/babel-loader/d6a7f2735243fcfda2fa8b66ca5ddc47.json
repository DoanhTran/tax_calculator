{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/src/components/displaytax.js\";\nimport React from \"react\";\nconst initial = \"nodata;\";\nconst fetching = \"fetching data\";\n/*global chrome*/\n\nclass DisplayTax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      taxRate: initial,\n      taxRegion: initial\n    };\n    console.log(\"display\");\n  }\n\n  componentDidMount() {\n    chrome.storage.sync.get('currentTax', function (result) {\n      console.log(\"get dat is called in display\");\n      console.log('Value currently is ' + result.currentTax);\n      console.log(result);\n      console.log(result.currentTax);\n\n      if (result.currentTax !== undefined) {\n        this.setState({\n          taxRate: result.currentTax.rate,\n          taxRegion: result.currentTax.tReg\n        });\n      }\n    }.bind(this));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.save !== prevProps.save && this.props.save === true) {\n      console.log(\"saveindisplay\");\n      const zip = this.props.zipcode;\n      this.setState({\n        taxRate: fetching,\n        taxRegion: fetching\n      });\n      fetch(\"http://0.0.0.0:5000/taxrate/\" + zip, {\n        methode: \"GET\" // headers: { \"Access-Control-Allow-Origin\": \"*\" },\n\n      }).then(res => res.json()).then(result => {\n        console.log(\"inresult\");\n        console.log(result);\n\n        if (result.error) {\n          console.log(\"not valid zipcode.\");\n        } else {\n          chrome.storage.sync.set({\n            currentTax: {\n              rate: result.data.EstimatedCombinedRate,\n              tReg: result.data.TaxRegionName,\n              zip: zip\n            }\n          }, function () {\n            console.log(\"tax rate is saved.\");\n          });\n        }\n\n        this.setState({\n          isLoaded: true,\n          taxRate: result.error ? result.error : result.data.EstimatedCombinedRate,\n          taxRegion: result.error ? result.error : result.data.TaxRegionName\n        });\n      }, error => {\n        console.log(\"inerror\");\n        console.log(error);\n        this.setState({\n          error: true,\n          isLoaded: true\n        });\n      }); // } else if (\n      //   this.props.save !== prevProps.save &&\n      //   this.props.save === false\n      // ) {\n      //     this.setState({ taxRate: fetching, taxRegion: fetching })\n      // }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, !this.state.error ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"tax rate: \", this.state.taxRate), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"tax regian name:\", this.state.taxRegion)) : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"error: $\", this.state.error));\n  }\n\n}\n\nexport default DisplayTax;","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/displaytax.js"],"names":["React","initial","fetching","DisplayTax","Component","constructor","props","state","error","isLoaded","taxRate","taxRegion","console","log","componentDidMount","chrome","storage","sync","get","result","currentTax","undefined","setState","rate","tReg","bind","componentDidUpdate","prevProps","save","zip","zipcode","fetch","methode","then","res","json","set","data","EstimatedCombinedRate","TaxRegionName","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst initial = \"nodata;\";\nconst fetching = \"fetching data\";\n\n/*global chrome*/\n\nclass DisplayTax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      taxRate: initial,\n      taxRegion: initial,\n    };\n    console.log(\"display\");\n   \n  }\n\n  componentDidMount(){\n    chrome.storage.sync.get('currentTax', function(result) {\n      console.log(\"get dat is called in display\");\n        console.log('Value currently is ' + result.currentTax);\n        console.log(result)\n        console.log(result.currentTax)\n        if (result.currentTax!==undefined){\n          this.setState({taxRate:result.currentTax.rate, taxRegion:result.currentTax.tReg});\n        }\n      }.bind(this));\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.save !== prevProps.save && this.props.save === true) {\n      console.log(\"saveindisplay\");\n      const zip = this.props.zipcode\n      this.setState({ taxRate: fetching, taxRegion: fetching });\n\n      fetch(\"http://0.0.0.0:5000/taxrate/\" + zip, {\n        methode: \"GET\",\n\n        // headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            console.log(\"inresult\");\n            console.log(result);\n            if (result.error){\n              console.log(\"not valid zipcode.\")\n            }\n            else{\n              chrome.storage.sync.set({currentTax: {rate:result.data.EstimatedCombinedRate, tReg:result.data.TaxRegionName, zip:zip} }, function() {\n                console.log(\"tax rate is saved.\")\n              });\n              \n            }\n            this.setState({\n              isLoaded: true,\n\n              taxRate: result.error\n                ? result.error\n                : result.data.EstimatedCombinedRate,\n              taxRegion: result.error\n                ? result.error\n                : result.data.TaxRegionName,\n            });\n          },\n          (error) => {\n            console.log(\"inerror\");\n            console.log(error);\n            this.setState({ error: true, isLoaded: true });\n          }\n        );\n      // } else if (\n      //   this.props.save !== prevProps.save &&\n      //   this.props.save === false\n      // ) {\n      //     this.setState({ taxRate: fetching, taxRegion: fetching })\n\n      // }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.error ? (\n          <div>\n            <h6>tax rate: {this.state.taxRate}</h6>\n            <h6>tax regian name:{this.state.taxRegion}</h6>\n          </div>\n        ) : (\n          <h6>error: ${this.state.error}</h6>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DisplayTax;\n"]},"metadata":{},"sourceType":"module"}