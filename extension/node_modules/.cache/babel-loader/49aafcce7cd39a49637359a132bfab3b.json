{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\n/*global chrome*/\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\n\nconst fakeSavedList = [{\n  rate: 0.08,\n  name: \"home\",\n  region: \"Ithaca\",\n  zipCode: \"14850\"\n}, {\n  rate: 0.09,\n  name: \"scl\",\n  region: \"Ithaca2\",\n  zipCode: \"12345\"\n}];\nexport default function NewInputBox() {\n  const inputBoxRef = React.createRef();\n  const searchContainerRef = React.createRef();\n  const searchOptionRef = React.createRef();\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] = useState([]);\n  const [searchOption, setSearchOption] = useState([]);\n  useEffect(() => {\n    setSavedZip(fakeSavedList); //     chrome.storage.sync.get('currentTax', function(result) {\n    //       console.log(\"get dat is called\");\n    //         console.log('Value currently is ' + result.currentTax);\n    //         console.log(result)\n    //         console.log(result.currentTax)\n    //         if (result.currentTax!==undefined){\n    //           setZipcode(result.currentTax.zip);\n    //           setSave(null);\n    //         }\n    //       });\n  }, []);\n  useEffect(() => {\n    if (save || save === null) {\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline');\n      document.removeEventListener('click', function () {}); //searchOptionRef.current.classList.add('container-hidden')\n\n      inputBoxRef.current.removeEventListener(\"keyup\", function () {});\n    }\n\n    if (save === false) {\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline'); //searchOptionRef.current.classList.remove('container-hidden')\n      // inputBoxRef.current.\n      //   }\n      // })\n    }\n  }, [save]);\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = event => {\n    setSave(true);\n  };\n\n  const optionClick = event => {\n    //change the textbox to match the saved data\n    console.log(\"option click\");\n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value); //setZipcode(event.target.attrbutes['data-zip'])\n\n    setSave(true);\n  };\n\n  useEffect(() => {\n    console.log(\"setSavedEDit\");\n    setSearchOption(searchOption => {\n      return make_htmlList();\n    });\n  }, [savedZip]);\n\n  function make_htmlList() {\n    console.log(\"make html is called\"); //console.log(savedZip)\n\n    let html = [/*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchUnder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }\n    })];\n    console.log(\"savedZip\");\n    console.log(savedZip);\n    savedZip.forEach(element => {\n      console.log(\"element\");\n      console.log(element);\n      console.log(element.zip);\n\n      if (element.zip !== zipcode) {\n        const savedButt = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"savedOptions\",\n          key: element.zip,\n          \"data-zip\": element.zipCode,\n          \"data-region\": element.region,\n          \"data-rate\": element.rate,\n          onClick: event => {\n            console.log(\"Oclick\");\n            setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value);\n            setSave(true);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 291\n          }\n        }, element.name), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 318\n          }\n        }, element.zipCode));\n        html.push(savedButt);\n      }\n    });\n    html.push( /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Add/edit saved zip\"));\n    console.log(html);\n    return html;\n  }\n\n  const focusInput = event => {\n    inputBoxRef.current.focus();\n  };\n\n  const handleFocus = event => {\n    const searchDivCurrent = searchContainerRef.current;\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline');\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function (event) {\n      if (event.currentTarget.value !== '' && event.keyCode === 13) {\n        console.log(zipcode);\n        setSave(true);\n        inputBoxRef.current.blur();\n      }\n    });\n    document.addEventListener('click', function (event) {\n      const isClickInsideElement = searchDivCurrent.contains(event.target);\n\n      if (!isClickInsideElement) {\n        setSave(null); //Do something click is outside specified element\n      }\n    });\n  }; //revert zip code back\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\");\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"ziplabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"Zipcode: \\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"multisearch-container green-outline\",\n    ref: searchContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar-container normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputBoxRef,\n    className: \"zip-input\",\n    type: \"text\",\n    maxLength: \"6\",\n    height: \"3\",\n    value: zipcode,\n    size: \"10\",\n    onChange: handleOnChange,\n    onFocus: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }), save || save === null ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-grey\",\n    onClick: focusInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-green\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 114\n    }\n  })), save || save === null ? '' : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-option-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 42\n    }\n  }, searchOption)), /*#__PURE__*/React.createElement(DisplayTax, {\n    save: save,\n    zipcode: zipcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx"],"names":["React","useState","useEffect","createRef","DisplayTax","fakeSavedList","rate","name","region","zipCode","NewInputBox","inputBoxRef","searchContainerRef","searchOptionRef","zipcode","setZipcode","save","setSave","savedZip","setSavedZip","searchOption","setSearchOption","current","classList","replace","document","removeEventListener","animation","setAnimation","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleSubmit","optionClick","console","log","attributes","getNamedItem","make_htmlList","html","forEach","element","zip","savedButt","push","focusInput","focus","handleFocus","searchDivCurrent","addEventListener","keyCode","blur","isClickInsideElement","contains","target","text","lastChar","slice","ascii","charCodeAt","length","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA;AAEA;AACA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC,IAAN;AAAYC,EAAAA,IAAI,EAAC,MAAjB;AAAyBC,EAAAA,MAAM,EAAC,QAAhC;AAAyCC,EAAAA,OAAO,EAAC;AAAjD,CAAD,EAA4D;AAACH,EAAAA,IAAI,EAAC,IAAN;AAAYC,EAAAA,IAAI,EAAC,KAAjB;AAAwBC,EAAAA,MAAM,EAAC,SAA/B;AAAyCC,EAAAA,OAAO,EAAC;AAAjD,CAA5D,CAAtB;AAGA,eAAe,SAASC,WAAT,GAAuB;AAEpC,QAAMC,WAAW,GAAGX,KAAK,CAACG,SAAN,EAApB;AACA,QAAMS,kBAAkB,GAAGZ,KAAK,CAACG,SAAN,EAA3B;AACA,QAAMU,eAAe,GAAGb,KAAK,CAACG,SAAN,EAAxB;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAiCpB,QAAQ,CAAC,EAAD,CAA/C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,WAAW,CAACd,aAAD,CAAX,CADc,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,GAbO,EAaN,EAbM,CAAT;AAiBAH,EAAAA,SAAS,CAAC,MAAI;AAEZ,QAAIc,IAAI,IAAGA,IAAI,KAAG,IAAlB,EAAuB;AACrBJ,MAAAA,kBAAkB,CAACU,OAAnB,CAA2BC,SAA3B,CAAqCC,OAArC,CAA6C,eAA7C,EAA8D,YAA9D;AACAC,MAAAA,QAAQ,CAACC,mBAAT,CAA6B,OAA7B,EAAsC,YAAU,CAAE,CAAlD,EAFqB,CAGrB;;AACAf,MAAAA,WAAW,CAACW,OAAZ,CAAoBI,mBAApB,CAAwC,OAAxC,EAAiD,YAAU,CAAE,CAA7D;AACD;;AACD,QAAIV,IAAI,KAAG,KAAX,EAAiB;AACfJ,MAAAA,kBAAkB,CAACU,OAAnB,CAA2BC,SAA3B,CAAqCC,OAArC,CAA6C,YAA7C,EAA2D,eAA3D,EADe,CAEf;AACA;AACA;AACA;AAED;AAGF,GAlBQ,EAkBP,CAACR,IAAD,CAlBO,CAAT;AAqBA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,EAA1C;;AAEA,QAAM4B,cAAc,GAAIC,KAAD,IAAW;AAChC;AACA,UAAMC,KAAK,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAlC;AACA,UAAMC,WAAW,GAAGC,OAAO,CAACJ,KAAD,CAA3B;AACAhB,IAAAA,UAAU,CAACqB,OAAO,CAACF,WAAD,CAAR,CAAV;AACD,GALD;;AAOA,QAAMG,YAAY,GAAIP,KAAD,IAAW;AAC9Bb,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMqB,WAAW,GAAIR,KAAD,IAAU;AAC5B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAzB,IAAAA,UAAU,CAACe,KAAK,CAACE,aAAN,CAAoBS,UAApB,CAA+BC,YAA/B,CAA4C,UAA5C,EAAwDT,KAAzD,CAAV,CAJ4B,CAK5B;;AACAhB,IAAAA,OAAO,CAAC,IAAD,CAAP;AAED,GARD;;AAUAf,EAAAA,SAAS,CAAC,MAAI;AACZqC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAnB,IAAAA,eAAe,CAACD,YAAY,IAAE;AAAC,aAAOuB,aAAa,EAApB;AAAuB,KAAvC,CAAf;AAED,GALQ,EAKP,CAACzB,QAAD,CALO,CAAT;;AAOA,WAASyB,aAAT,GAAwB;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CACE,qBADF,EADsB,CAItB;;AACA,QAAII,IAAI,GAAE,cAAC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAV;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACAA,IAAAA,QAAQ,CAAC2B,OAAT,CAAiBC,OAAO,IAAI;AAC1BP,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,OAAO,CAACC,GAApB;;AACA,UAAGD,OAAO,CAACC,GAAR,KAAgBjC,OAAnB,EAA2B;AAC3B,cAAMkC,SAAS,gBAAG;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,GAAG,EAAEF,OAAO,CAACC,GAA9C;AAAmD,sBAAUD,OAAO,CAACrC,OAArE;AAA8E,yBAAaqC,OAAO,CAACtC,MAAnG;AAA2G,uBAAWsC,OAAO,CAACxC,IAA9H;AAAoI,UAAA,OAAO,EAAGwB,KAAD,IAAU;AAACS,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAsBzB,YAAAA,UAAU,CAACe,KAAK,CAACE,aAAN,CAAoBS,UAApB,CAA+BC,YAA/B,CAA4C,UAA5C,EAAwDT,KAAzD,CAAV;AAA2EhB,YAAAA,OAAO,CAAC,IAAD,CAAP;AAAc,WAAvQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO6B,OAAO,CAACvC,IAAf,CAA1Q,eAAqS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOuC,OAAO,CAACrC,OAAf,CAArS,CAAlB;AACAmC,QAAAA,IAAI,CAACK,IAAL,CAAUD,SAAV;AACC;AAEF,KATD;AAUAJ,IAAAA,IAAI,CAACK,IAAL,eAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAV;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AAEA,WAAOA,IAAP;AACD;;AAED,QAAMM,UAAU,GAAIpB,KAAD,IAAW;AAC5BnB,IAAAA,WAAW,CAACW,OAAZ,CAAoB6B,KAApB;AAED,GAHD;;AAIA,QAAMC,WAAW,GAAItB,KAAD,IAAW;AAC7B,UAAMuB,gBAAgB,GAAGzC,kBAAkB,CAACU,OAA5C;AACAV,IAAAA,kBAAkB,CAACU,OAAnB,CAA2BC,SAA3B,CAAqCC,OAArC,CAA6C,YAA7C,EAA2D,eAA3D;AACAP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAa,IAAAA,KAAK,CAACE,aAAN,CAAoBsB,gBAApB,CAAqC,OAArC,EAA8C,UAASxB,KAAT,EAAgB;AACzD,UAAIA,KAAK,CAACE,aAAN,CAAoBC,KAApB,KAA4B,EAA5B,IAAkCH,KAAK,CAACyB,OAAN,KAAkB,EAAxD,EAA2D;AACzDhB,QAAAA,OAAO,CAACC,GAAR,CAAY1B,OAAZ;AACAG,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,QAAAA,WAAW,CAACW,OAAZ,CAAoBkC,IAApB;AACD;AAAC,KALP;AAOA/B,IAAAA,QAAQ,CAAC6B,gBAAT,CAA0B,OAA1B,EAAmC,UAASxB,KAAT,EAAgB;AAE7C,YAAM2B,oBAAoB,GAAGJ,gBAAgB,CAACK,QAAjB,CAA0B5B,KAAK,CAAC6B,MAAhC,CAA7B;;AACA,UAAI,CAACF,oBAAL,EAA2B;AACzBxC,QAAAA,OAAO,CAAC,IAAD,CAAP,CADyB,CAKvB;AACH;AACJ,KAVH;AAYD,GAvBD,CAzGoC,CAqIlC;;AAIF;;;;;;AAIA,WAASmB,OAAT,CAAiBwB,IAAjB,EAAuB;AACrB,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,CAAf;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAACG,UAAT,CAAoB,CAApB,CAAZ;;AAEA,QAAI,MAAMD,KAAN,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AAC9B,aAAOH,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD;AACF;;AAED,WAAS3B,OAAT,CAAiByB,IAAjB,EAAuB;AACrB,QAAIA,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACnBrC,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,SAA5B;AACAuC,MAAAA,UAAU,CAAC,YAAY;AACrBtC,QAAAA,YAAY;AACZW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,SAA5B;AACD,OAHS,EAGP,GAHO,CAAV;AAIA,aAAOiC,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAAP;AACD;;AACD,WAAOF,IAAP;AACD;;AAED,sBAGE,uDAEE;AAAO,IAAA,SAAS,EAAE,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAK,IAAA,SAAS,EAAG,qCAAjB;AAAuD,IAAA,GAAG,EAAEhD,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AACI,IAAA,GAAG,EAAED,WADT;AAEI,IAAA,SAAS,EAAG,WAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,SAAS,EAAC,GAJd;AAKI,IAAA,MAAM,EAAG,GALb;AAMI,IAAA,KAAK,EAAEG,OANX;AAOI,IAAA,IAAI,EAAC,IAPT;AAQI,IAAA,QAAQ,EAAEe,cARd;AASI,IAAA,OAAO,EAAEuB,WATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAgBWpC,IAAI,IAAGA,IAAI,KAAG,IAAd,gBAAqB;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEkC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,gBAAgG;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAA0C,IAAA,OAAO,EAAEb,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhB3G,CAFA,EAoBWrB,IAAI,IAAGA,IAAI,KAAG,IAAd,GAAqB,EAArB,gBAAwB;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CI,YAA3C,CApBnC,CAHF,eAiCE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEJ,IAAlB;AAAwB,IAAA,OAAO,EAAEF,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,CAHF;AAuCD","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\n/*global chrome*/\n\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\nconst fakeSavedList = [{rate:0.08, name:\"home\", region:\"Ithaca\",zipCode:\"14850\"}, {rate:0.09, name:\"scl\", region:\"Ithaca2\",zipCode:\"12345\"}]\n\n\nexport default function NewInputBox() {\n\n  const inputBoxRef = React.createRef()\n  const searchContainerRef = React.createRef()\n  const searchOptionRef = React.createRef()\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] =useState([])\n  const [searchOption, setSearchOption]= useState([])\n  useEffect(() => {\n    setSavedZip(fakeSavedList)\n    \n//     chrome.storage.sync.get('currentTax', function(result) {\n//       console.log(\"get dat is called\");\n//         console.log('Value currently is ' + result.currentTax);\n//         console.log(result)\n//         console.log(result.currentTax)\n//         if (result.currentTax!==undefined){\n//           setZipcode(result.currentTax.zip);\n//           setSave(null);\n//         }\n//       });\n   },[]);\n\n  \n  \n  useEffect(()=>{\n    \n    if (save|| save===null){\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline')\n      document.removeEventListener('click', function(){})\n      //searchOptionRef.current.classList.add('container-hidden')\n      inputBoxRef.current.removeEventListener(\"keyup\", function(){})\n    }\n    if (save===false){\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n      //searchOptionRef.current.classList.remove('container-hidden')\n      // inputBoxRef.current.\n      //   }\n      // })\n      \n    }\n    \n\n  },[save])\n\n\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = (event) => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = (event) => {\n    setSave(true);\n  };\n\n  const optionClick = (event) =>{\n    //change the textbox to match the saved data\n    console.log(\"option click\")\n    \n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value)\n    //setZipcode(event.target.attrbutes['data-zip'])\n    setSave(true)\n    \n  }\n\n  useEffect(()=>{\n    console.log(\"setSavedEDit\")\n    \n    setSearchOption(searchOption=>{return make_htmlList()})\n    \n  },[savedZip])\n\n  function make_htmlList(){\n    console.log(\n      \"make html is called\"\n    )\n    //console.log(savedZip)\n    let html= [<div className=\"searchUnder\"></div>];\n    console.log(\"savedZip\")\n    console.log(savedZip)\n    savedZip.forEach(element => {\n      console.log(\"element\")\n      console.log(element)\n      console.log(element.zip)\n      if(element.zip !== zipcode){\n      const savedButt = <button className=\"savedOptions\" key={element.zip} data-zip={element.zipCode} data-region={element.region} data-rate={element.rate} onClick={(event)=> {console.log(\"Oclick\");setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value); setSave(true)}} ><span>{element.name}</span><span>{element.zipCode}</span></button>\n      html.push(savedButt);\n      }\n      \n    });\n    html.push(<button>Add/edit saved zip</button>)\n    console.log(html)\n \n    return html\n  }\n\n  const focusInput = (event) => {\n    inputBoxRef.current.focus()\n\n  }\n  const handleFocus = (event) => {\n    const searchDivCurrent = searchContainerRef.current\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function(event) {\n         if (event.currentTarget.value!=='' && event.keyCode === 13){\n           console.log(zipcode)\n           setSave(true)\n           inputBoxRef.current.blur()\n         }})\n\n    document.addEventListener('click', function(event) {\n      \n          const isClickInsideElement = searchDivCurrent.contains(event.target);\n          if (!isClickInsideElement) {\n            setSave(null)\n            \n            \n            \n              //Do something click is outside specified element\n          }\n      });\n \n  };\n\n\n  \n\n    //revert zip code back\n    \n  \n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\")\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n  return (\n    \n    \n    <>\n\n      <label className =\"ziplabel\">Zipcode: &#160;</label>\n      <div className = \"multisearch-container green-outline\" ref={searchContainerRef}>\n      \n      <div className=\"searchBar-container normal\">\n              <input\n                  ref={inputBoxRef}\n                  className = \"zip-input\"\n                  type=\"text\"\n                  maxLength=\"6\"\n                  height = \"3\"\n                  value={zipcode}\n                  size=\"10\"\n                  onChange={handleOnChange}\n                  onFocus={handleFocus}\n                  \n                  \n                />\n\n                \n                {save|| save===null ? <button className=\"glass-icon glass-grey\" onClick={focusInput}></button> : <button className=\"glass-icon glass-green\"onClick={handleSubmit}></button>}\n                </div>\n                {save|| save===null ? '':<div  className=\"search-option-container\">{searchOption}</div>}\n\n                </div>\n    \n      \n\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {/* {save|| save===null ? \"\" : <button onClick={handleSubmit}>Submit</button>} */}\n      {/* </form> */}\n      <DisplayTax save={save} zipcode={zipcode}></DisplayTax>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}