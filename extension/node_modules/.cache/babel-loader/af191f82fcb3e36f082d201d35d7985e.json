{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/extension/src/components/manageZip.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\";\nexport default function ManageZip(props) {\n  const [savedZip, setLocalSavedZip] = useState({});\n  useEffect(() => {\n    //console.log(\"in use effect edit zip click\")\n    if (props.editZipClick) {\n      setLocalSavedZip(props.savedZip);\n      console.log(\"savedzip in manage\", savedZip);\n    }\n  }, [props.editZipClick]);\n\n  const addEditZip = (zip, editedObj) => {\n    //console.log(\"add zip edit call\")\n    savedZip[zip] = editedObj; //console.log(\"new sldkfiew\", savedZip)\n\n    setLocalSavedZip(savedZip);\n  };\n\n  const deleteZip = key => {\n    console.log('delete call');\n    delete savedZip[key];\n    setLocalSavedZip(savedZip);\n  };\n\n  if (props.editZipClick) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(SaveZipList, {\n      savedZip: savedZip,\n      editLocalZip: addEditZip,\n      onRemove: deleteZip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, \"cancel\")));\n  } else {\n    return null;\n  }\n}\n\nfunction EditCard(props) {\n  const [editing, changeEditState] = useState(props.editing);\n  const [zipcode, setZipcode] = useState(props.zipcode ? props.zipcode : '');\n  const [name, setName] = useState(props.name ? props.name : '');\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleNameChange = event => {\n    const input = event.currentTarget.value; //console.log(\"name input\", input)\n\n    setName(input);\n  };\n\n  const onSave = event => {\n    if (zipcode !== '') {\n      console.log(\"props.key in card\", props.keyProp);\n      props.onSave(props.keyProp, {\n        name: name,\n        zip: zipcode\n      });\n      changeEditState(false);\n    } else {\n      window.alert(\"zipcode can not be empty\"); // need a better way to show this}\n    }\n  };\n\n  const handleEditClicked = event => {\n    changeEditState(true);\n  };\n  /* Extract only numbers out of input box and returns a string of text \n     containing at most 6 numbers\n     Parameter: text is a string\n     Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      //   setAnimation(\"shake\");\n      //   console.log(\"text is longer than 5 characters\")\n      //   console.log(\"animation 1:\", animation);\n      //   setTimeout(function () {\n      //     setAnimation();\n      //     console.log(\"animation 2:\", animation);\n      //   }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  if (props.zipcode === null) {\n    changeEditState(true);\n  }\n\n  if (!editing) {\n    //console.log(\"not editing create in edit card\")\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input card-input-readonly\",\n      type: \"text\",\n      placeholder: \"name this zipcode\",\n      value: name,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input card-input-readonly\",\n      placeholder: \"zipcode xxxxx\",\n      readOnly: true,\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleEditClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  } else {\n    //console.log(\" editing create in edit card\")\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input\",\n      type: \"text\",\n      value: name,\n      placeholder: \"name this zipcode\",\n      onChange: handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input\",\n      onChange: handleOnChange,\n      placeholder: \"zipcode xxxxx\",\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 3\n      }\n    }, \"save\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        props.onRemove(props.keyProp);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  }\n}\n\nfunction SaveZipList(props) {\n  const [adding, setAddingState] = useState(false);\n  const [timeStamp, setTimeStamp] = useState(0);\n\n  const addClick = () => {\n    console.log(\"add click\");\n    const time = new Date().getTime();\n    setTimeStamp(time);\n    setAddingState(true);\n  };\n\n  const onNewSave = (key, editedObj) => {\n    console.log('key', key);\n    console.log('newsave', editedObj);\n    props.editLocalZip(key, editedObj);\n    setAddingState(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(props.savedZip).map(key => {\n    //console.log(\"in edit\", key)\n    return /*#__PURE__*/React.createElement(EditCard, {\n      key: key,\n      keyProp: key,\n      zipcode: props.savedZip[key].zip,\n      name: props.savedZip[key].name,\n      editing: false,\n      onSave: props.editLocalZip,\n      onRemove: props.onRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    });\n  })), console.log(\"timpe stamp in add render\", timeStamp), adding ? /*#__PURE__*/React.createElement(EditCard, {\n    key: timeStamp,\n    keyProp: timeStamp,\n    zipcode: '',\n    name: '',\n    editing: true,\n    onSave: onNewSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addClick,\n    onRemove: props.onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 128\n    }\n  }, \"add\"));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/extension/src/components/manageZip.js"],"names":["React","useState","useEffect","createRef","ManageZip","props","savedZip","setLocalSavedZip","editZipClick","console","log","addEditZip","zip","editedObj","deleteZip","key","EditCard","editing","changeEditState","zipcode","setZipcode","name","setName","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleNameChange","onSave","keyProp","window","alert","handleEditClicked","text","lastChar","slice","ascii","charCodeAt","length","onRemove","SaveZipList","adding","setAddingState","timeStamp","setTimeStamp","addClick","time","Date","getTime","onNewSave","editLocalZip","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\"\n\nexport default function ManageZip(props) {\n\tconst [savedZip, setLocalSavedZip] = useState({})\n\tuseEffect(() => {\n\t\t//console.log(\"in use effect edit zip click\")\n\t\tif (props.editZipClick){\n\n\t\t\tsetLocalSavedZip(props.savedZip)\n\t\t\t\n\t\t\tconsole.log(\"savedzip in manage\",savedZip)\n\t\t}\n\t\t\n\t},[props.editZipClick])\n\n\tconst addEditZip = (zip, editedObj)=>{\n\t\t//console.log(\"add zip edit call\")\n\t\tsavedZip[zip] = editedObj\n\t\t//console.log(\"new sldkfiew\", savedZip)\n\t\tsetLocalSavedZip(savedZip)\n\t}\n\n\tconst deleteZip = (key) =>{\n\t\tconsole.log('delete call')\n\t\tdelete savedZip[key]\n\t\tsetLocalSavedZip(savedZip)\n\t}\n\n\tif (props.editZipClick){\n\t\t\n\t\t\n\treturn (\n\n\t\t<>\n\t\t<div className=\"edit-window\">\n\t\t\t<SaveZipList savedZip={savedZip} editLocalZip={addEditZip} onRemove={deleteZip}></SaveZipList>\n\t\t\t<button>done</button>\n\t\t\t<button>cancel</button>\n\t\t</div>\n\t\t</>\n\t)}\n\t\n\telse{ return null}\n\n}\n\n\n\nfunction EditCard(props){\n\tconst [editing, changeEditState]= useState(props.editing);\n\tconst [zipcode, setZipcode] = useState(props.zipcode?props.zipcode:'')\n\tconst [name, setName]= useState(props.name?props.name:'')\n\n\n\tconst handleOnChange = (event) => {\n\t\t//console.log(\"animation\", animation);\n\t\tconst input = event.currentTarget.value;\n\t\tconst returnInput = maxFive(input);\n\t\tsetZipcode(onlyNum(returnInput));\n\t  };\n\n\tconst handleNameChange = (event) =>{\n\t\tconst input = event.currentTarget.value;\n\t\t//console.log(\"name input\", input)\n\t\t\n\t\tsetName(input)\n\t}\n\n\tconst onSave = (event) => {\n\t\tif(zipcode !==''){\n\t\tconsole.log(\"props.key in card\", props.keyProp)\n\t\tprops.onSave(props.keyProp, {name:name, zip:zipcode})\n\t\tchangeEditState(false)\n\t\t}\n\t\telse{window.alert(\"zipcode can not be empty\")// need a better way to show this}\n\t}\n}\n\n\tconst handleEditClicked = (event) =>{\n\t\tchangeEditState(true)\n\n\t}\n\n\t/* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n    //   setAnimation(\"shake\");\n    //   console.log(\"text is longer than 5 characters\")\n    //   console.log(\"animation 1:\", animation);\n    //   setTimeout(function () {\n    //     setAnimation();\n    //     console.log(\"animation 2:\", animation);\n    //   }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n\tif (props.zipcode ===null){\n\t\tchangeEditState(true)\n\t}\n\tif (!editing){\n\t\t//console.log(\"not editing create in edit card\")\n\t\treturn (\n\t\t<div className=\"edit-zip-card\">\n\t\t<label htmlFor=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input card-input-readonly\" type=\"text\" placeholder='name this zipcode' value={name} readOnly/>\n\t\t<label htmlFor=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input card-input-readonly\" placeholder='zipcode xxxxx' readOnly value={zipcode}/>\n\t\t<button onClick={handleEditClicked}>edit</button>\n\t\t<button>remove</button>\n\t\t</div>\n\t\t)}\n\n\telse {\n\t\t//console.log(\" editing create in edit card\")\n\treturn(\n\t\t<div className=\"edit-zip-card\">\n\t\t<label htmlFor=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input\" type=\"text\" value={name}  placeholder='name this zipcode' onChange ={handleNameChange}/>\n\t\t<label htmlFor=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input\" onChange={handleOnChange} placeholder='zipcode xxxxx' value={zipcode}/>\n\t\t<button onClick={onSave}>save</button>\n\t\t<button onClick={()=>{props.onRemove(props.keyProp)}}>remove</button>\n\t\t</div>\n\t)}\n\n\t\n\n\n}\n\nfunction SaveZipList(props){\n\tconst [adding, setAddingState]= useState(false)\n\tconst [timeStamp, setTimeStamp] = useState(0)\n\tconst addClick = () =>{\n\t\tconsole.log(\"add click\")\n\t\tconst time = new Date().getTime()\n\t\tsetTimeStamp(time)\n\t\tsetAddingState(true)\n\n\t}\n\tconst onNewSave = (key, editedObj)=>{\n\t\tconsole.log('key',key)\n\t\tconsole.log('newsave',editedObj)\n\n\n\t\tprops.editLocalZip(key, editedObj)\n\t\tsetAddingState(false)\n\t\t\n\t}\n\treturn (\n\t\t<>\n\t\t\n\t\t<>{Object.keys(props.savedZip).map(key => {\n\t\t\t//console.log(\"in edit\", key)\n\t\t\treturn <EditCard key={key} keyProp ={key} zipcode={props.savedZip[key].zip} name= {props.savedZip[key].name} editing={false} onSave={props.editLocalZip} onRemove={props.onRemove}></EditCard>\n\t\t\t\n\t\t})}</>\n\t\t{console.log(\"timpe stamp in add render\", timeStamp)}\n\t\t{adding?<EditCard key ={timeStamp} keyProp={timeStamp} zipcode={''} name={''} editing={true} onSave={onNewSave}></EditCard>: <button onClick={addClick} onRemove={props.onRemove}>add</button> }\n\t\t\n\t\t</>\n\t\n\t)\n\n}\n"]},"metadata":{},"sourceType":"module"}