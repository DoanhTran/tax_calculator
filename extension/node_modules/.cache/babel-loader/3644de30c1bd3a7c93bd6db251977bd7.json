{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\n/*global chrome*/\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\n\nconst fakeSavedList = [{\n  rate: 0.08,\n  name: \"home\",\n  region: \"Ithaca\",\n  zipCode: \"14850\"\n}, {\n  rate: 0.09,\n  name: \"scl\",\n  region: \"Ithaca2\",\n  zipCode: \"12345\"\n}];\nexport default function NewInputBox() {\n  const inputBoxRef = React.createRef();\n  const searchContainerRef = React.createRef();\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] = useState([]);\n  const [searchOption, setSearchOption] = useState([]);\n  useEffect(() => {//     chrome.storage.sync.get('currentTax', function(result) {\n    //       console.log(\"get dat is called\");\n    //         console.log('Value currently is ' + result.currentTax);\n    //         console.log(result)\n    //         console.log(result.currentTax)\n    //         if (result.currentTax!==undefined){\n    //           setZipcode(result.currentTax.zip);\n    //           setSave(null);\n    //         }\n    //       });\n  }, []);\n  useEffect(() => {\n    setSavedZip(savedZip => [fakeSavedList]);\n\n    if (save || save === null) {\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline'); //inputBoxRef.current.removeEventListener(\"keyup\")\n    }\n\n    if (save === false) {\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline'); // inputBoxRef.current.\n      //   }\n      // })\n    }\n  }, [save]);\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = event => {\n    setSave(true);\n  };\n\n  const optionClick = event => {\n    //change the textbox to match the saved data\n    console.log(\"option click\");\n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value); //setZipcode(event.target.attrbutes['data-zip'])\n\n    setSave(true);\n  };\n\n  useEffect(() => {\n    console.log(\"setSavedEDit\");\n    setSearchOption(searchOption => {\n      console.log(make_htmlList());\n      return make_htmlList();\n    });\n  }, [savedZip]);\n\n  function make_htmlList() {\n    console.log(\"make html is called\");\n    console.log(savedZip);\n    let html = [/*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchUnder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    })];\n    savedZip.forEach(element => {\n      const savedButt = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"savedOptions\",\n        \"data-zip\": element.zipCode,\n        \"data-region\": element.region,\n        \"data-rate\": element.rate,\n        onClick: optionClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 161\n        }\n      }, element.name), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 188\n        }\n      }, element.zipCode));\n      html.push(savedButt);\n    });\n    html.push( /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Add/edit saved zip\"));\n    console.log(html);\n    return html;\n  }\n\n  const focusInput = event => {\n    inputBoxRef.current.focus();\n  };\n\n  const handleFocus = event => {\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline');\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function (event) {\n      if (event.currentTarget.value !== '' && event.keyCode === 13) {\n        console.log(zipcode);\n        setSave(true);\n        inputBoxRef.current.blur();\n      }\n    });\n  };\n\n  const handleBlur = event => {\n    //revert zip code back\n    setSave(null);\n    searchContainerRef.current.classList.replace('green-outline', 'no-outline');\n    event.currentTarget.removeEventListener(\"keyup\", function () {});\n  };\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\");\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"ziplabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, \"Zipcode: \\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"multisearch-container green-outline\",\n    ref: searchContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar-container normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputBoxRef,\n    className: \"zip-input\",\n    type: \"text\",\n    maxLength: \"6\",\n    height: \"3\",\n    value: zipcode,\n    size: \"10\",\n    onChange: handleOnChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), save || save === null ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-grey\",\n    onClick: focusInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-green\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 114\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-option-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, save || save === null ? '' : searchOption)), /*#__PURE__*/React.createElement(DisplayTax, {\n    save: save,\n    zipcode: zipcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx"],"names":["React","useState","useEffect","createRef","DisplayTax","fakeSavedList","rate","name","region","zipCode","NewInputBox","inputBoxRef","searchContainerRef","zipcode","setZipcode","save","setSave","savedZip","setSavedZip","searchOption","setSearchOption","current","classList","replace","animation","setAnimation","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleSubmit","optionClick","console","log","attributes","getNamedItem","make_htmlList","html","forEach","element","savedButt","push","focusInput","focus","handleFocus","addEventListener","keyCode","blur","handleBlur","removeEventListener","text","lastChar","slice","ascii","charCodeAt","length","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\n/*global chrome*/\n\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\nconst fakeSavedList = [{rate:0.08, name:\"home\", region:\"Ithaca\",zipCode:\"14850\"}, {rate:0.09, name:\"scl\", region:\"Ithaca2\",zipCode:\"12345\"}]\n\n\nexport default function NewInputBox() {\n\n  const inputBoxRef = React.createRef()\n  const searchContainerRef = React.createRef()\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] =useState([])\n  const [searchOption, setSearchOption]= useState([])\n  useEffect(() => {\n    \n//     chrome.storage.sync.get('currentTax', function(result) {\n//       console.log(\"get dat is called\");\n//         console.log('Value currently is ' + result.currentTax);\n//         console.log(result)\n//         console.log(result.currentTax)\n//         if (result.currentTax!==undefined){\n//           setZipcode(result.currentTax.zip);\n//           setSave(null);\n//         }\n//       });\n   },[]);\n\n  \n  \n  useEffect(()=>{\n    setSavedZip(savedZip=>[fakeSavedList])\n    if (save|| save===null){\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline')\n      //inputBoxRef.current.removeEventListener(\"keyup\")\n    }\n    if (save===false){\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n      // inputBoxRef.current.\n      //   }\n      // })\n      \n    }\n    \n\n  },[save])\n\n\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = (event) => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = (event) => {\n    setSave(true);\n  };\n\n  const optionClick = (event) =>{\n    //change the textbox to match the saved data\n    console.log(\"option click\")\n    \n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value)\n    //setZipcode(event.target.attrbutes['data-zip'])\n    setSave(true)\n  }\n\n  useEffect(()=>{\n    console.log(\"setSavedEDit\")\n    setSearchOption(searchOption=>{console.log(make_htmlList()); return make_htmlList()})\n\n  },[savedZip])\n\n  function make_htmlList(){\n    console.log(\n      \"make html is called\"\n    )\n    console.log(savedZip)\n    let html= [<div className=\"searchUnder\"></div>];\n    savedZip.forEach(element => {\n      const savedButt = <button className=\"savedOptions\" data-zip={element.zipCode} data-region={element.region} data-rate={element.rate} onClick={optionClick}><span>{element.name}</span><span>{element.zipCode}</span></button>\n\n      html.push(savedButt);\n    });\n    html.push(<button>Add/edit saved zip</button>)\n    console.log(html)\n \n    return html\n  }\n\n  const focusInput = (event) => {\n    inputBoxRef.current.focus()\n\n  }\n  const handleFocus = (event) => {\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function(event) {\n         if (event.currentTarget.value!=='' && event.keyCode === 13){\n           console.log(zipcode)\n           setSave(true)\n           inputBoxRef.current.blur()\n         }})\n \n  };\n\n  const handleBlur = (event) => {\n    //revert zip code back\n    setSave(null)\n    searchContainerRef.current.classList.replace('green-outline', 'no-outline')\n    event.currentTarget.removeEventListener(\"keyup\", function(){})\n\n\n  }\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\")\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n  return (\n    \n    \n    <>\n\n      <label className =\"ziplabel\">Zipcode: &#160;</label>\n      <div className = \"multisearch-container green-outline\" ref={searchContainerRef}>\n      \n      <div className=\"searchBar-container normal\">\n              <input\n                  ref={inputBoxRef}\n                  className = \"zip-input\"\n                  type=\"text\"\n                  maxLength=\"6\"\n                  height = \"3\"\n                  value={zipcode}\n                  size=\"10\"\n                  onChange={handleOnChange}\n                  onFocus={handleFocus}\n                  onBlur = {handleBlur}\n                  \n                />\n\n                \n                {save|| save===null ? <button className=\"glass-icon glass-grey\" onClick={focusInput}></button> : <button className=\"glass-icon glass-green\"onClick={handleSubmit}></button>}\n                </div>\n                <div className=\"search-option-container\">{save|| save===null ? '':searchOption}</div>\n\n                </div>\n    \n      \n\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {/* {save|| save===null ? \"\" : <button onClick={handleSubmit}>Submit</button>} */}\n      {/* </form> */}\n      <DisplayTax save={save} zipcode={zipcode}></DisplayTax>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}