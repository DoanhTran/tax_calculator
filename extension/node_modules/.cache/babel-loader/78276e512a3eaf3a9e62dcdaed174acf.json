{"ast":null,"code":"import _slicedToArray from\"/Users/mina/Desktop/tax_calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./inputbox.css\";import DisplayTax from\"../displaytax.js\";/*global chrome*/export default function InputBox(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),zipcode=_useState2[0],setZipcode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),save=_useState4[0],setSave=_useState4[1];chrome.storage.sync.get('currentTax',function(result){console.log(\"get dat is called\");console.log('Value currently is '+result.currentTax);console.log(result);console.log(result.currentTax);if(result.currentTax!==undefined){setZipcode(result.currentTax.zip);setSave(true);}});var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),animation=_useState6[0],setAnimation=_useState6[1];var handleOnChange=function handleOnChange(event){console.log(\"animation\",animation);var input=event.currentTarget.value;var returnInput=maxFive(input);setZipcode(onlyNum(returnInput));};var handleSubmit=function handleSubmit(event){setSave(true);};var handleFocus=function handleFocus(event){setSave(false);};/* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/function onlyNum(text){var lastChar=text.slice(-1);var ascii=lastChar.charCodeAt(0);if(48<=ascii&&ascii<=57){return text;}else{return text.slice(0,-1);}}function maxFive(text){if(text.length>5){setAnimation(\"shake\");setTimeout(function(){setAnimation();},200);return text.slice(0,5);}return text;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Zipcode \\xA0\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",maxLength:\"5\",value:zipcode,size:\"10\",onChange:handleOnChange,onFocus:handleFocus}),/*#__PURE__*/React.createElement(\"div\",null,zipcode),save?\"\":/*#__PURE__*/React.createElement(\"button\",{onClick:handleSubmit},\"Submit\"),/*#__PURE__*/React.createElement(DisplayTax,{save:save,zipcode:zipcode}));}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputBox.jsx"],"names":["React","useState","useEffect","DisplayTax","InputBox","zipcode","setZipcode","save","setSave","chrome","storage","sync","get","result","console","log","currentTax","undefined","zip","animation","setAnimation","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleSubmit","handleFocus","text","lastChar","slice","ascii","charCodeAt","length","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./inputbox.css\";\nimport DisplayTax from \"../displaytax.js\";\n/*global chrome*/\n\nexport default function InputBox() {\n\n\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  chrome.storage.sync.get('currentTax', function(result) {\n    console.log(\"get dat is called\");\n      console.log('Value currently is ' + result.currentTax);\n      console.log(result)\n      console.log(result.currentTax)\n      if (result.currentTax!==undefined){\n        setZipcode(result.currentTax.zip);\n        setSave(true);\n      }\n    });\n  \n\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = (event) => {\n    console.log(\"animation\", animation);\n\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = (event) => {\n    setSave(true);\n  };\n\n  const handleFocus = (event) => {\n    setSave(false);\n  };\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      setTimeout(function () {\n        setAnimation();\n      }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n  return (\n    <div>\n      <label>Zipcode &#160;</label>\n      <input\n        type=\"text\"\n        maxLength=\"5\"\n        value={zipcode}\n        size=\"10\"\n        onChange={handleOnChange}\n        onFocus={handleFocus}\n      />\n      <div>{zipcode}</div>\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {save ? \"\" : <button onClick={handleSubmit}>Submit</button>}\n      {/* </form> */}\n      <DisplayTax save={save} zipcode={zipcode}></DisplayTax>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}