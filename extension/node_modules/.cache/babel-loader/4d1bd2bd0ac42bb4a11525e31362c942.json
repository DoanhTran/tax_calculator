{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputBox.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./inputbox.css\";\nexport default function InputBox() {\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n\n  const handleOnChange = event => {\n    const input = event.currentTarget.value;\n    setZipcode(onlyNum(input));\n  };\n\n  const handleSubmit = event => {\n    console.log(zipcode);\n    setSave(true);\n  };\n\n  const handleFocus = event => {\n    setSave(false);\n  };\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // <form className=\"zipcodeForm\" onSubmit={handleSubmit}>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"Zipcode \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"5\",\n      value: zipcode,\n      size: \"10\",\n      onChange: handleOnChange,\n      onFocus: handleFocus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, zipcode), save ? \"\" : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }\n    }, \"Submit\"))\n  );\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputBox.jsx"],"names":["React","useState","useEffect","InputBox","zipcode","setZipcode","save","setSave","handleOnChange","event","input","currentTarget","value","onlyNum","handleSubmit","console","log","handleFocus","text","lastChar","slice","ascii","charCodeAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMO,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,KAAK,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAlC;AACAP,IAAAA,UAAU,CAACQ,OAAO,CAACH,KAAD,CAAR,CAAV;AACD,GAHD;;AAKA,QAAMI,YAAY,GAAIL,KAAD,IAAW;AAC9BM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMU,WAAW,GAAIR,KAAD,IAAW;AAC7BF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;AAIA;;;;;;AAIA,WAASM,OAAT,CAAiBK,IAAjB,EAAuB;AACrB,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,CAAf;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAACG,UAAT,CAAoB,CAApB,CAAZ;;AAEA,QAAI,MAAMD,KAAN,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AAC9B,aAAOH,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD;AACF;;AAED;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,GAFZ;AAGE,MAAA,KAAK,EAAEhB,OAHT;AAIE,MAAA,IAAI,EAAC,IAJP;AAKE,MAAA,QAAQ,EAAEI,cALZ;AAME,MAAA,OAAO,EAAES,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMb,OAAN,CAVF,EAaGE,IAAI,GAAG,EAAH,gBAAQ;AAAQ,MAAA,OAAO,EAAEQ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbf;AAFF;AAmBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./inputbox.css\";\n\nexport default function InputBox() {\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n\n  const handleOnChange = (event) => {\n    const input = event.currentTarget.value;\n    setZipcode(onlyNum(input));\n  };\n\n  const handleSubmit = (event) => {\n    console.log(zipcode);\n    setSave(true);\n  };\n\n  const handleFocus = (event) => {\n    setSave(false);\n  };\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  return (\n    // <form className=\"zipcodeForm\" onSubmit={handleSubmit}>\n    <div>\n      <label>Zipcode &#160;</label>\n      <input\n        type=\"text\"\n        maxLength=\"5\"\n        value={zipcode}\n        size=\"10\"\n        onChange={handleOnChange}\n        onFocus={handleFocus}\n      />\n      <div>{zipcode}</div>\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {save ? \"\" : <button onClick={handleSubmit}>Submit</button>}\n      {/* </form> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}