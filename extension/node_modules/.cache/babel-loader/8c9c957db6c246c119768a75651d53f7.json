{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\nimport ManageZip from \"../manageZip\";\n/*global chrome*/\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\n\nconst fakeSavedList = {\n  14850: {\n    rate: 0.08,\n    name: \"home\",\n    region: \"Ithaca\",\n    zipCode: \"14850\"\n  },\n  12345: {\n    rate: 0.09,\n    name: \"scl\",\n    region: \"Ithaca2\",\n    zipCode: \"12345\"\n  }\n};\nexport default function NewInputBox() {\n  const inputBoxRef = React.createRef();\n  const searchContainerRef = React.createRef();\n  const searchOptionRef = React.createRef();\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] = useState([]);\n  const [searchOption, setSearchOption] = useState({});\n  const [editWindow, displayEditWindow] = useState(false);\n  useEffect(() => {\n    setSavedZip(fakeSavedList);\n    inputBoxRef.current.focus(); //     chrome.storage.sync.get('currentTax', function(result) {\n    //       console.log(\"get dat is called\");\n    //         console.log('Value currently is ' + result.currentTax);\n    //         console.log(result)\n    //         console.log(result.currentTax)\n    //         if (result.currentTax!==undefined){\n    //           setZipcode(result.currentTax.zip);\n    //           setSave(null);\n    //         }\n    //       });\n  }, []);\n  useEffect(() => {\n    if (save || save === null) {\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline');\n      document.removeEventListener('click', function () {}); //searchOptionRef.current.classList.add('container-hidden')\n\n      inputBoxRef.current.removeEventListener(\"keyup\", function () {});\n    }\n\n    if (save === false) {\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline'); //searchOptionRef.current.classList.remove('container-hidden')\n      // inputBoxRef.current.\n      //   }\n      // })\n    }\n  }, [save]);\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = event => {\n    setSave(true);\n  };\n\n  const optionClick = event => {\n    //change the textbox to match the saved data\n    console.log(\"option click\");\n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value); //setZipcode(event.target.attrbutes['data-zip'])\n\n    setSave(true);\n  };\n\n  const editZipClick = event => {\n    displayEditWindow(true);\n  };\n\n  useEffect(() => {\n    console.log(\"setSavedEDit\");\n    setSearchOption(searchOption => {\n      return make_htmlList();\n    });\n  }, [savedZip]);\n\n  function make_htmlList() {\n    console.log(\"make html is called\"); //console.log(savedZip)\n\n    let html = [/*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchUnder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 16\n      }\n    })];\n    console.log(\"savedZip\");\n    console.log(savedZip);\n    Object.keys(fakeSavedList).forEach(index => {\n      if (fakeSavedList[index].zip !== zipcode) {\n        const savedButt = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"savedOptions\",\n          key: fakeSavedList[index].zip,\n          \"data-zip\": fakeSavedList[index].zipCode,\n          \"data-region\": fakeSavedList[index].region,\n          \"data-rate\": fakeSavedList[index].rate,\n          onClick: optionClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 232\n          }\n        }, fakeSavedList[index].name), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 272\n          }\n        }, fakeSavedList[index].zipCode));\n        html.push(savedButt);\n      }\n    });\n    html.push( /*#__PURE__*/React.createElement(\"button\", {\n      key: \"editsavedbutt\",\n      onClick: editZipClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Add/edit saved zip\"));\n    console.log(html);\n    return html;\n  }\n\n  const focusInput = event => {\n    inputBoxRef.current.focus();\n  };\n\n  const handleFocus = event => {\n    const searchDivCurrent = searchContainerRef.current;\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline');\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function (event) {\n      if (event.currentTarget.value !== '' && event.keyCode === 13) {\n        console.log(zipcode);\n        setSave(true);\n        inputBoxRef.current.blur();\n      }\n    });\n    document.addEventListener('click', function (event) {\n      const isClickInsideElement = searchDivCurrent.contains(event.target);\n\n      if (!isClickInsideElement) {\n        setSave(null);\n      }\n    });\n  }; //revert zip code back\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\");\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"ziplabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, \"Zipcode: \\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"multisearch-container green-outline\",\n    ref: searchContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar-container normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputBoxRef,\n    className: \"zip-input\",\n    type: \"text\",\n    maxLength: \"6\",\n    height: \"3\",\n    value: zipcode,\n    size: \"10\",\n    onChange: handleOnChange,\n    onFocus: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }), save || save === null ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-grey\",\n    onClick: focusInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-green\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 114\n    }\n  }))), /*#__PURE__*/React.createElement(DisplayTax, {\n    save: save,\n    zipcode: zipcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ManageZip, {\n    editZipClick: editWindow,\n    savedZip: savedZip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/inputbox/inputbox2.jsx"],"names":["React","useState","useEffect","createRef","DisplayTax","ManageZip","fakeSavedList","rate","name","region","zipCode","NewInputBox","inputBoxRef","searchContainerRef","searchOptionRef","zipcode","setZipcode","save","setSave","savedZip","setSavedZip","searchOption","setSearchOption","editWindow","displayEditWindow","current","focus","classList","replace","document","removeEventListener","animation","setAnimation","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleSubmit","optionClick","console","log","attributes","getNamedItem","editZipClick","make_htmlList","html","Object","keys","forEach","index","zip","savedButt","push","focusInput","handleFocus","searchDivCurrent","addEventListener","keyCode","blur","isClickInsideElement","contains","target","text","lastChar","slice","ascii","charCodeAt","length","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA;AAEA;AACA;;AACA,MAAMC,aAAa,GAAG;AAAC,SAAM;AAACC,IAAAA,IAAI,EAAC,IAAN;AAAYC,IAAAA,IAAI,EAAC,MAAjB;AAAyBC,IAAAA,MAAM,EAAC,QAAhC;AAAyCC,IAAAA,OAAO,EAAC;AAAjD,GAAP;AAAkE,SAAM;AAACH,IAAAA,IAAI,EAAC,IAAN;AAAYC,IAAAA,IAAI,EAAC,KAAjB;AAAwBC,IAAAA,MAAM,EAAC,SAA/B;AAAyCC,IAAAA,OAAO,EAAC;AAAjD;AAAxE,CAAtB;AAGA,eAAe,SAASC,WAAT,GAAuB;AAEpC,QAAMC,WAAW,GAAGZ,KAAK,CAACG,SAAN,EAApB;AACA,QAAMU,kBAAkB,GAAGb,KAAK,CAACG,SAAN,EAA3B;AACA,QAAMW,eAAe,GAAGd,KAAK,CAACG,SAAN,EAAxB;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAiCrB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACsB,UAAD,EAAaC,iBAAb,IAAiCvB,QAAQ,CAAC,KAAD,CAA/C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW,CAACd,aAAD,CAAX;AACAM,IAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB,GAFc,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,GAfO,EAeN,EAfM,CAAT;AAmBAxB,EAAAA,SAAS,CAAC,MAAI;AAEZ,QAAIe,IAAI,IAAGA,IAAI,KAAG,IAAlB,EAAuB;AACrBJ,MAAAA,kBAAkB,CAACY,OAAnB,CAA2BE,SAA3B,CAAqCC,OAArC,CAA6C,eAA7C,EAA8D,YAA9D;AACAC,MAAAA,QAAQ,CAACC,mBAAT,CAA6B,OAA7B,EAAsC,YAAU,CAAE,CAAlD,EAFqB,CAGrB;;AACAlB,MAAAA,WAAW,CAACa,OAAZ,CAAoBK,mBAApB,CAAwC,OAAxC,EAAiD,YAAU,CAAE,CAA7D;AACD;;AACD,QAAIb,IAAI,KAAG,KAAX,EAAiB;AACfJ,MAAAA,kBAAkB,CAACY,OAAnB,CAA2BE,SAA3B,CAAqCC,OAArC,CAA6C,YAA7C,EAA2D,eAA3D,EADe,CAEf;AACA;AACA;AACA;AAED;AAGF,GAlBQ,EAkBP,CAACX,IAAD,CAlBO,CAAT;AAqBA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,EAA1C;;AAEA,QAAMgC,cAAc,GAAIC,KAAD,IAAW;AAChC;AACA,UAAMC,KAAK,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAlC;AACA,UAAMC,WAAW,GAAGC,OAAO,CAACJ,KAAD,CAA3B;AACAnB,IAAAA,UAAU,CAACwB,OAAO,CAACF,WAAD,CAAR,CAAV;AACD,GALD;;AAOA,QAAMG,YAAY,GAAIP,KAAD,IAAW;AAC9BhB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMwB,WAAW,GAAIR,KAAD,IAAU;AAC5B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA5B,IAAAA,UAAU,CAACkB,KAAK,CAACE,aAAN,CAAoBS,UAApB,CAA+BC,YAA/B,CAA4C,UAA5C,EAAwDT,KAAzD,CAAV,CAJ4B,CAK5B;;AACAnB,IAAAA,OAAO,CAAC,IAAD,CAAP;AAED,GARD;;AAUA,QAAM6B,YAAY,GAAIb,KAAD,IAAW;AAC9BV,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAI;AACZyC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAtB,IAAAA,eAAe,CAACD,YAAY,IAAE;AAAC,aAAO2B,aAAa,EAApB;AAAuB,KAAvC,CAAf;AAED,GALQ,EAKP,CAAC7B,QAAD,CALO,CAAT;;AAOA,WAAS6B,aAAT,GAAwB;AACtBL,IAAAA,OAAO,CAACC,GAAR,CACE,qBADF,EADsB,CAItB;;AACA,QAAIK,IAAI,GAAE,cAAC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAV;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ;AAEA+B,IAAAA,MAAM,CAACC,IAAP,CAAY7C,aAAZ,EAA2B8C,OAA3B,CAAmCC,KAAK,IAAG;AACzC,UAAG/C,aAAa,CAAC+C,KAAD,CAAb,CAAqBC,GAArB,KAA6BvC,OAAhC,EAAwC;AACxC,cAAMwC,SAAS,gBAAG;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,GAAG,EAAEjD,aAAa,CAAC+C,KAAD,CAAb,CAAqBC,GAA3D;AAAgE,sBAAUhD,aAAa,CAAC+C,KAAD,CAAb,CAAqB3C,OAA/F;AAAwG,yBAAaJ,aAAa,CAAC+C,KAAD,CAAb,CAAqB5C,MAA1I;AAAkJ,uBAAWH,aAAa,CAAC+C,KAAD,CAAb,CAAqB9C,IAAlL;AAAwL,UAAA,OAAO,EAAEmC,WAAjM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA+M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOpC,aAAa,CAAC+C,KAAD,CAAb,CAAqB7C,IAA5B,CAA/M,eAAuP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,aAAa,CAAC+C,KAAD,CAAb,CAAqB3C,OAA5B,CAAvP,CAAlB;AACAuC,QAAAA,IAAI,CAACO,IAAL,CAAUD,SAAV;AACC;AAEF,KAND;AAOAN,IAAAA,IAAI,CAACO,IAAL,eAAU;AAAQ,MAAA,GAAG,EAAE,eAAb;AAA8B,MAAA,OAAO,EAAET,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAV;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAEA,WAAOA,IAAP;AACD;;AAED,QAAMQ,UAAU,GAAIvB,KAAD,IAAW;AAC5BtB,IAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB;AAED,GAHD;;AAIA,QAAMgC,WAAW,GAAIxB,KAAD,IAAW;AAC7B,UAAMyB,gBAAgB,GAAG9C,kBAAkB,CAACY,OAA5C;AACAZ,IAAAA,kBAAkB,CAACY,OAAnB,CAA2BE,SAA3B,CAAqCC,OAArC,CAA6C,YAA7C,EAA2D,eAA3D;AACAV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAgB,IAAAA,KAAK,CAACE,aAAN,CAAoBwB,gBAApB,CAAqC,OAArC,EAA8C,UAAS1B,KAAT,EAAgB;AACzD,UAAIA,KAAK,CAACE,aAAN,CAAoBC,KAApB,KAA4B,EAA5B,IAAkCH,KAAK,CAAC2B,OAAN,KAAkB,EAAxD,EAA2D;AACzDlB,QAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ;AACAG,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,QAAAA,WAAW,CAACa,OAAZ,CAAoBqC,IAApB;AACD;AAAC,KALP;AAOAjC,IAAAA,QAAQ,CAAC+B,gBAAT,CAA0B,OAA1B,EAAmC,UAAS1B,KAAT,EAAgB;AAE7C,YAAM6B,oBAAoB,GAAGJ,gBAAgB,CAACK,QAAjB,CAA0B9B,KAAK,CAAC+B,MAAhC,CAA7B;;AACA,UAAI,CAACF,oBAAL,EAA2B;AACzB7C,QAAAA,OAAO,CAAC,IAAD,CAAP;AAED;AACJ,KAPH;AASD,GApBD,CA9GoC,CAuIlC;;AAIF;;;;;;AAIA,WAASsB,OAAT,CAAiB0B,IAAjB,EAAuB;AACrB,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,CAAf;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAACG,UAAT,CAAoB,CAApB,CAAZ;;AAEA,QAAI,MAAMD,KAAN,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AAC9B,aAAOH,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD;AACF;;AAED,WAAS7B,OAAT,CAAiB2B,IAAjB,EAAuB;AACrB,QAAIA,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACnBvC,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,SAA5B;AACAyC,MAAAA,UAAU,CAAC,YAAY;AACrBxC,QAAAA,YAAY;AACZW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,SAA5B;AACD,OAHS,EAGP,GAHO,CAAV;AAIA,aAAOmC,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAAP;AACD;;AACD,WAAOF,IAAP;AACD;;AAED,sBAGE,uDAEE;AAAO,IAAA,SAAS,EAAE,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAK,IAAA,SAAS,EAAG,qCAAjB;AAAuD,IAAA,GAAG,EAAErD,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AACI,IAAA,GAAG,EAAED,WADT;AAEI,IAAA,SAAS,EAAG,WAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,SAAS,EAAC,GAJd;AAKI,IAAA,MAAM,EAAG,GALb;AAMI,IAAA,KAAK,EAAEG,OANX;AAOI,IAAA,IAAI,EAAC,IAPT;AAQI,IAAA,QAAQ,EAAEkB,cARd;AASI,IAAA,OAAO,EAAEyB,WATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAgBWzC,IAAI,IAAGA,IAAI,KAAG,IAAd,gBAAqB;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEwC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,gBAAgG;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAA0C,IAAA,OAAO,EAAEhB,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhB3G,CAFA,CAHF,eAiCE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAExB,IAAlB;AAAwB,IAAA,OAAO,EAAEF,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,eAkCE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEQ,UAAzB;AAAqC,IAAA,QAAQ,EAAEJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CAHF;AAwCD","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\nimport ManageZip from \"../manageZip\";\n/*global chrome*/\n\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\nconst fakeSavedList = {14850:{rate:0.08, name:\"home\", region:\"Ithaca\",zipCode:\"14850\"}, 12345:{rate:0.09, name:\"scl\", region:\"Ithaca2\",zipCode:\"12345\"}}\n\n\nexport default function NewInputBox() {\n\n  const inputBoxRef = React.createRef()\n  const searchContainerRef = React.createRef()\n  const searchOptionRef = React.createRef()\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] =useState([])\n  const [searchOption, setSearchOption]= useState({})\n  const [editWindow, displayEditWindow]= useState(false)\n  useEffect(() => {\n    setSavedZip(fakeSavedList)\n    inputBoxRef.current.focus()\n    \n    \n//     chrome.storage.sync.get('currentTax', function(result) {\n//       console.log(\"get dat is called\");\n//         console.log('Value currently is ' + result.currentTax);\n//         console.log(result)\n//         console.log(result.currentTax)\n//         if (result.currentTax!==undefined){\n//           setZipcode(result.currentTax.zip);\n//           setSave(null);\n//         }\n//       });\n   },[]);\n\n  \n  \n  useEffect(()=>{\n    \n    if (save|| save===null){\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline')\n      document.removeEventListener('click', function(){})\n      //searchOptionRef.current.classList.add('container-hidden')\n      inputBoxRef.current.removeEventListener(\"keyup\", function(){})\n    }\n    if (save===false){\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n      //searchOptionRef.current.classList.remove('container-hidden')\n      // inputBoxRef.current.\n      //   }\n      // })\n      \n    }\n    \n\n  },[save])\n\n\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = (event) => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = (event) => {\n    setSave(true);\n  };\n\n  const optionClick = (event) =>{\n    //change the textbox to match the saved data\n    console.log(\"option click\")\n    \n    setZipcode(event.currentTarget.attributes.getNamedItem('data-zip').value)\n    //setZipcode(event.target.attrbutes['data-zip'])\n    setSave(true)\n    \n  }\n\n  const editZipClick = (event) => {\n    displayEditWindow(true)\n  }\n\n  useEffect(()=>{\n    console.log(\"setSavedEDit\")\n    \n    setSearchOption(searchOption=>{return make_htmlList()})\n    \n  },[savedZip])\n\n  function make_htmlList(){\n    console.log(\n      \"make html is called\"\n    )\n    //console.log(savedZip)\n    let html= [<div className=\"searchUnder\"></div>];\n    console.log(\"savedZip\")\n    console.log(savedZip)\n\n    Object.keys(fakeSavedList).forEach(index=> {\n      if(fakeSavedList[index].zip !== zipcode){\n      const savedButt = <button className=\"savedOptions\" key={fakeSavedList[index].zip} data-zip={fakeSavedList[index].zipCode} data-region={fakeSavedList[index].region} data-rate={fakeSavedList[index].rate} onClick={optionClick} ><span>{fakeSavedList[index].name}</span><span>{fakeSavedList[index].zipCode}</span></button>\n      html.push(savedButt);\n      }\n      \n    });\n    html.push(<button key={\"editsavedbutt\"} onClick={editZipClick}>Add/edit saved zip</button>)\n    console.log(html)\n \n    return html\n  }\n\n  const focusInput = (event) => {\n    inputBoxRef.current.focus()\n\n  }\n  const handleFocus = (event) => {\n    const searchDivCurrent = searchContainerRef.current\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function(event) {\n         if (event.currentTarget.value!=='' && event.keyCode === 13){\n           console.log(zipcode)\n           setSave(true)\n           inputBoxRef.current.blur()\n         }})\n\n    document.addEventListener('click', function(event) {\n      \n          const isClickInsideElement = searchDivCurrent.contains(event.target);\n          if (!isClickInsideElement) {\n            setSave(null)\n            \n          }\n      });\n \n  };\n\n\n  \n\n    //revert zip code back\n    \n  \n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      console.log(\"text is longer than 5 characters\")\n      console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        console.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n  return (\n    \n    \n    <>\n\n      <label className =\"ziplabel\">Zipcode: &#160;</label>\n      <div className = \"multisearch-container green-outline\" ref={searchContainerRef}>\n      \n      <div className=\"searchBar-container normal\">\n              <input\n                  ref={inputBoxRef}\n                  className = \"zip-input\"\n                  type=\"text\"\n                  maxLength=\"6\"\n                  height = \"3\"\n                  value={zipcode}\n                  size=\"10\"\n                  onChange={handleOnChange}\n                  onFocus={handleFocus}\n                  \n                  \n                />\n\n                \n                {save|| save===null ? <button className=\"glass-icon glass-grey\" onClick={focusInput}></button> : <button className=\"glass-icon glass-green\"onClick={handleSubmit}></button>}\n                </div>\n                {/* {save|| save===null ? '':<div  className=\"search-option-container\">{searchOption}</div>} */}\n\n                </div>\n    \n      \n\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {/* {save|| save===null ? \"\" : <button onClick={handleSubmit}>Submit</button>} */}\n      {/* </form> */}\n      <DisplayTax save={save} zipcode={zipcode}></DisplayTax>\n      <ManageZip editZipClick={editWindow} savedZip={savedZip}></ManageZip>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}