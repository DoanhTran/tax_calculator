{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/extension/src/components/inputbox/inputbox2.jsx\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\nimport ManageZip from \"../manageZip\";\n/*global chrome*/\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\n\nconst fakeSavedList = {\n  0: {\n    name: \"home\",\n    zip: 12345\n  },\n  1: {\n    name: \"scl\",\n    zip: 14850\n  }\n};\nexport default function NewInputBox() {\n  const inputBoxRef = React.createRef();\n  const searchContainerRef = React.createRef();\n  const searchOptionRef = React.createRef();\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] = useState({});\n  const [searchOption, setSearchOption] = useState([]);\n  const [editWindow, displayEditWindow] = useState(false);\n  useEffect(() => {\n    setSavedZip(fakeSavedList);\n    inputBoxRef.current.focus(); //     chrome.storage.sync.get('currentTax', function(result) {\n    //       console.log(\"get dat is called\");\n    //         console.log('Value currently is ' + result.currentTax);\n    //         console.log(result)\n    //         console.log(result.currentTax)\n    //         if (result.currentTax!==undefined){\n    //           setZipcode(result.currentTax.zip);\n    //           setSave(null);\n    //         }\n    //       });\n  }, []);\n  useEffect(() => {\n    if (save || save === null) {\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline');\n      document.removeEventListener('click', function () {}); //searchOptionRef.current.classList.add('container-hidden')\n\n      inputBoxRef.current.removeEventListener(\"keyup\", function () {});\n    }\n\n    if (save === false) {\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline'); //searchOptionRef.current.classList.remove('container-hidden')\n      // inputBoxRef.current.\n      //   }\n      // })\n    }\n  }, [save]);\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = event => {\n    setSave(true);\n  };\n\n  const closeEditZip = changedZip => {\n    if (changedZip) {\n      setSavedZip(changedZip);\n    }\n\n    console.log(changedZip);\n    displayEditWindow(false);\n  };\n\n  const optionClick = zip => {\n    //change the textbox to match the saved data\n    //console.log(\"option click\")\n    console.log(\"option click\", zip);\n    setZipcode(zip); //setZipcode(event.target.attrbutes['data-zip'])\n\n    setSave(true);\n  };\n\n  const editZipClick = event => {\n    displayEditWindow(true);\n  };\n\n  useEffect(() => {\n    console.log(\"setSavedEDit\");\n    setSearchOption(searchOption => {\n      return make_htmlList();\n    });\n  }, [savedZip]); // function make_htmlList(){\n  //   console.log(\n  //     \"make html is called\"\n  //   )\n  //   //console.log(savedZip)\n  //   let html= [<div className=\"searchUnder\"></div>];\n  //   //console.log(\"savedZip\")\n  //   //console.log(savedZip)\n  //   Object.keys(savedZip).forEach(index=> {\n  //     const savedButt = <button className=\"savedOptions\" key={index} data-zip={savedZip[index].zip} onClick={optionClick} ><span>{savedZip[index].name}</span><span>{savedZip[index].zip}</span></button>\n  //     html.push(savedButt);\n  //   });\n  //   html.push(<button key={\"editsavedbutt\"} onClick={editZipClick}>Add/edit saved zip</button>)\n  //   //console.log(html)\n  //   return html\n  // }\n\n  const focusInput = event => {\n    inputBoxRef.current.focus();\n  };\n\n  const handleFocus = event => {\n    const searchDivCurrent = searchContainerRef.current;\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline');\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function (event) {\n      if (event.currentTarget.value !== '' && event.keyCode === 13) {\n        //console.log(zipcode)\n        setSave(true);\n        inputBoxRef.current.blur();\n      }\n    });\n    document.addEventListener('click', function (event) {\n      const isClickInsideElement = searchDivCurrent.contains(event.target);\n\n      if (!isClickInsideElement) {\n        setSave(null);\n      }\n    });\n  }; //revert zip code back\n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\"); // console.log(\"text is longer than 5 characters\")\n      // console.log(\"animation 1:\", animation);\n\n      setTimeout(function () {\n        setAnimation(); //fconsole.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"ziplabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"Zipcode: \\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"multisearch-container green-outline\",\n    ref: searchContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar-container normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputBoxRef,\n    className: \"zip-input\",\n    type: \"text\",\n    maxLength: \"6\",\n    height: \"3\",\n    value: zipcode,\n    size: \"10\",\n    onChange: handleOnChange,\n    onFocus: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }), save || save === null ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-grey\",\n    onClick: focusInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"glass-icon glass-green\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 114\n    }\n  })), save || save === null ? '' : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-option-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(OptionList, {\n    savedZip: savedZip,\n    optionClick: optionClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 85\n    }\n  }))), /*#__PURE__*/React.createElement(DisplayTax, {\n    save: save,\n    zipcode: zipcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ManageZip, {\n    editZipClick: editWindow,\n    closeEdit: closeEditZip,\n    savedZip: savedZip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction OptionList() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchUnder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  }), Object.keys(props.savedZip).map(key => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"savedOptions\",\n      key: key,\n      \"data-zip\": props.savedZip[key].zip,\n      onClick: () => {\n        props.optionClick(props.savedZip[key].zip);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 152\n      }\n    }, props.savedZip[key].name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 191\n      }\n    }, props.savedZip[key].zip));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"editsavedbutt\",\n    onClick: () => props.editZipClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, \"Add/edit saved zip\"));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/extension/src/components/inputbox/inputbox2.jsx"],"names":["React","useState","useEffect","createRef","DisplayTax","ManageZip","fakeSavedList","name","zip","NewInputBox","inputBoxRef","searchContainerRef","searchOptionRef","zipcode","setZipcode","save","setSave","savedZip","setSavedZip","searchOption","setSearchOption","editWindow","displayEditWindow","current","focus","classList","replace","document","removeEventListener","animation","setAnimation","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleSubmit","closeEditZip","changedZip","console","log","optionClick","editZipClick","make_htmlList","focusInput","handleFocus","searchDivCurrent","addEventListener","keyCode","blur","isClickInsideElement","contains","target","text","lastChar","slice","ascii","charCodeAt","length","setTimeout","OptionList","Object","keys","props","map","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../../App.css\";\nimport DisplayTax from \"../displaytax.js\";\nimport ManageZip from \"../manageZip\";\n/*global chrome*/\n\n//I'm not sure if to use useRef or createRef\n// set save true trigger fetch data\nconst fakeSavedList = {0:{name:\"home\", zip:12345}, 1:{name:\"scl\", zip:14850}}\n\n\nexport default function NewInputBox() {\n\n  const inputBoxRef = React.createRef()\n  const searchContainerRef = React.createRef()\n  const searchOptionRef = React.createRef()\n  const [zipcode, setZipcode] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [savedZip, setSavedZip] =useState({})\n  const [searchOption, setSearchOption]= useState([])\n  const [editWindow, displayEditWindow]= useState(false)\n  useEffect(() => {\n    setSavedZip(fakeSavedList)\n    inputBoxRef.current.focus()\n    \n    \n//     chrome.storage.sync.get('currentTax', function(result) {\n//       console.log(\"get dat is called\");\n//         console.log('Value currently is ' + result.currentTax);\n//         console.log(result)\n//         console.log(result.currentTax)\n//         if (result.currentTax!==undefined){\n//           setZipcode(result.currentTax.zip);\n//           setSave(null);\n//         }\n//       });\n   },[]);\n\n  \n  \n  useEffect(()=>{\n    \n    if (save|| save===null){\n      searchContainerRef.current.classList.replace('green-outline', 'no-outline')\n      document.removeEventListener('click', function(){})\n      //searchOptionRef.current.classList.add('container-hidden')\n      inputBoxRef.current.removeEventListener(\"keyup\", function(){})\n    }\n    if (save===false){\n      searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n      //searchOptionRef.current.classList.remove('container-hidden')\n      // inputBoxRef.current.\n      //   }\n      // })\n      \n    }\n    \n\n  },[save])\n\n\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = (event) => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleSubmit = (event) => {\n    setSave(true);\n  };\n\n  const closeEditZip = (changedZip) =>{\n    if(changedZip){setSavedZip(changedZip)}\n    \n    console.log(changedZip)\n\n    displayEditWindow(false)\n  }\n\n\n  const optionClick = (zip) =>{\n    //change the textbox to match the saved data\n    //console.log(\"option click\")\n    console.log(\"option click\", zip)\n    \n    setZipcode(zip)\n    //setZipcode(event.target.attrbutes['data-zip'])\n    setSave(true)\n    \n  }\n\n  const editZipClick = (event) => {\n    displayEditWindow(true)\n  }\n\n  useEffect(()=>{\n    console.log(\"setSavedEDit\")\n    \n    setSearchOption(searchOption=>{return make_htmlList()})\n    \n  },[savedZip])\n\n  // function make_htmlList(){\n  //   console.log(\n  //     \"make html is called\"\n  //   )\n  //   //console.log(savedZip)\n  //   let html= [<div className=\"searchUnder\"></div>];\n  //   //console.log(\"savedZip\")\n  //   //console.log(savedZip)\n\n  //   Object.keys(savedZip).forEach(index=> {\n      \n  //     const savedButt = <button className=\"savedOptions\" key={index} data-zip={savedZip[index].zip} onClick={optionClick} ><span>{savedZip[index].name}</span><span>{savedZip[index].zip}</span></button>\n  //     html.push(savedButt);\n      \n      \n  //   });\n  //   html.push(<button key={\"editsavedbutt\"} onClick={editZipClick}>Add/edit saved zip</button>)\n  //   //console.log(html)\n \n  //   return html\n  // }\n\n  const focusInput = (event) => {\n    inputBoxRef.current.focus()\n\n  }\n  const handleFocus = (event) => {\n    const searchDivCurrent = searchContainerRef.current\n    searchContainerRef.current.classList.replace('no-outline', 'green-outline')\n    setSave(false);\n    event.currentTarget.addEventListener(\"keyup\", function(event) {\n         if (event.currentTarget.value!=='' && event.keyCode === 13){\n           //console.log(zipcode)\n           setSave(true)\n           inputBoxRef.current.blur()\n         }})\n\n    document.addEventListener('click', function(event) {\n      \n          const isClickInsideElement = searchDivCurrent.contains(event.target);\n          if (!isClickInsideElement) {\n            setSave(null)\n            \n          }\n      });\n \n  };\n\n\n  \n\n    //revert zip code back\n    \n  \n\n  /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      setAnimation(\"shake\");\n      // console.log(\"text is longer than 5 characters\")\n      // console.log(\"animation 1:\", animation);\n      setTimeout(function () {\n        setAnimation();\n        //fconsole.log(\"animation 2:\", animation);\n      }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n  return (\n    \n    \n    <>\n\n      <label className =\"ziplabel\">Zipcode: &#160;</label>\n      <div className = \"multisearch-container green-outline\" ref={searchContainerRef}>\n      \n      <div className=\"searchBar-container normal\">\n              <input\n                  ref={inputBoxRef}\n                  className = \"zip-input\"\n                  type=\"text\"\n                  maxLength=\"6\"\n                  height = \"3\"\n                  value={zipcode}\n                  size=\"10\"\n                  onChange={handleOnChange}\n                  onFocus={handleFocus}\n                  \n                  \n                />\n\n                \n                {save|| save===null ? <button className=\"glass-icon glass-grey\" onClick={focusInput}></button> : <button className=\"glass-icon glass-green\"onClick={handleSubmit}></button>}\n                </div>\n                {save|| save===null ? '':<div  className=\"search-option-container\">{<OptionList savedZip={savedZip} optionClick={optionClick}></OptionList>}</div>}\n\n                </div>\n    \n      \n\n      {/* <button type=\"submit\">Submit</button> */}\n\n      {/* {save|| save===null ? \"\" : <button onClick={handleSubmit}>Submit</button>} */}\n      {/* </form> */}\n      <DisplayTax save={save} zipcode={zipcode}></DisplayTax>\n      <ManageZip editZipClick={editWindow} closeEdit={closeEditZip} savedZip={savedZip}></ManageZip>\n    </>\n  )\n}\n\n\nfunction OptionList(){\n  return(\n    <>\n    <div className=\"searchUnder\"></div>\n    {Object.keys(props.savedZip).map(key => {\n      return <button className=\"savedOptions\" key={key} data-zip={props.savedZip[key].zip} onClick={()=>{props.optionClick(props.savedZip[key].zip)}} ><span>{props.savedZip[key].name}</span><span>{props.savedZip[key].zip}</span></button>\n\n    })}\n    <button key={\"editsavedbutt\"} onClick={()=>props.editZipClick()}>Add/edit saved zip</button>\n\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}