{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/extension/src/components/manageZip.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\";\nexport default function ManageZip(props) {\n  const [adding, setAddingState] = useState(false);\n  const [timeStamp, setTimeStamp] = useState(0);\n  const [savedZip, setLocalSavedZip] = useState({});\n\n  const addClick = () => {\n    console.log(\"add click\");\n    const time = new Date().getTime();\n    setTimeStamp(time);\n    setAddingState(true);\n  };\n\n  const onNewSave = (key, editedObj) => {\n    console.log('key', key);\n    console.log('newsave', editedObj);\n    editLocalZip(key, editedObj);\n    setAddingState(false);\n  };\n\n  useEffect(() => {\n    //console.log(\"in use effect edit zip click\")\n    if (props.editZipClick) {\n      setLocalSavedZip(props.savedZip);\n      console.log(\"savedzip in manage\", savedZip);\n    }\n  }, [props.editZipClick]);\n\n  const addEditZip = (zip, editedObj) => {\n    //console.log(\"add zip edit call\")\n    savedZip[zip] = editedObj; //console.log(\"new sldkfiew\", savedZip)\n\n    setLocalSavedZip(savedZip);\n  };\n\n  const deletezip = key => {\n    console.log('delete call');\n    delete savedZip[key];\n    setLocalSavedZip(savedZip);\n  };\n\n  if (props.editZipClick) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(props.savedZip).map(key => {\n      //console.log(\"in edit\", key)\n      return /*#__PURE__*/React.createElement(EditCard, {\n        key: key,\n        keyProp: key,\n        zipcode: props.savedZip[key].zip,\n        name: props.savedZip[key].name,\n        editing: false,\n        onSave: addEditZip,\n        deletezip: deletezip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      });\n    }), adding ? /*#__PURE__*/React.createElement(EditCard, {\n      key: timeStamp,\n      keyProp: timeStamp,\n      zipcode: '',\n      name: '',\n      editing: true,\n      onSave: onNewSave,\n      deletezip: deletezip,\n      onCancel: () => {\n        setAddingState(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }) : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: addClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 190\n      }\n    }, \"add\")), adding ? '' : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        props.closeEdit(savedZip);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        props.closeEdit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, \"close\")));\n  } else {\n    return null;\n  }\n}\n\nfunction EditCard(props) {\n  const [editing, changeEditState] = useState(props.editing);\n  const [zipcode, setZipcode] = useState(props.zipcode ? props.zipcode : '');\n  const [name, setName] = useState(props.name ? props.name : '');\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleNameChange = event => {\n    const input = event.currentTarget.value; //console.log(\"name input\", input)\n\n    setName(input);\n  };\n\n  const onSave = event => {\n    if (zipcode !== '') {\n      console.log(\"props.key in card\", props.keyProp);\n      props.onSave(props.keyProp, {\n        name: name,\n        zip: zipcode\n      });\n      changeEditState(false);\n    } else {\n      window.alert(\"zipcode can not be empty\"); // need a better way to show this}\n    }\n  };\n\n  const removeClicked = event => {\n    console.log(\"remove click\");\n    props.deletezip(props.keyProp);\n  };\n\n  const cancelClicked = event => {\n    console.log(\"cancelClicked\");\n    setZipcode(props.zipcode);\n    setName(props.name);\n    if (props.onCancel) props.onCancel();\n    changeEditState(false);\n  };\n\n  const handleEditClicked = event => {\n    changeEditState(true);\n  };\n  /* Extract only numbers out of input box and returns a string of text \n     containing at most 6 numbers\n     Parameter: text is a string\n     Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      //   setAnimation(\"shake\");\n      //   console.log(\"text is longer than 5 characters\")\n      //   console.log(\"animation 1:\", animation);\n      //   setTimeout(function () {\n      //     setAnimation();\n      //     console.log(\"animation 2:\", animation);\n      //   }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  if (props.zipcode === null) {\n    changeEditState(true);\n  }\n\n  if (!editing) {\n    //console.log(\"not editing create in edit card\")\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input card-input-readonly\",\n      type: \"text\",\n      placeholder: \"name this zipcode\",\n      value: name,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input card-input-readonly\",\n      placeholder: \"zipcode xxxxx\",\n      readOnly: true,\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleEditClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 3\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: removeClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  } else {\n    //console.log(\" editing create in edit card\")\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input\",\n      type: \"text\",\n      value: name,\n      placeholder: \"name this zipcode\",\n      onChange: handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input\",\n      onChange: handleOnChange,\n      placeholder: \"zipcode xxxxx\",\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 3\n      }\n    }, \"save\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: cancelClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 3\n      }\n    }, \"cancel\"));\n  }\n}\n\nfunction SaveZipList(props) {\n  const [adding, setAddingState] = useState(false);\n  const [timeStamp, setTimeStamp] = useState(0);\n\n  const addClick = () => {\n    console.log(\"add click\");\n    const time = new Date().getTime();\n    setTimeStamp(time);\n    setAddingState(true);\n  };\n\n  const onNewSave = (key, editedObj) => {\n    console.log('key', key);\n    console.log('newsave', editedObj);\n    props.editLocalZip(key, editedObj);\n    setAddingState(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(props.savedZip).map(key => {\n    //console.log(\"in edit\", key)\n    return /*#__PURE__*/React.createElement(EditCard, {\n      key: key,\n      keyProp: key,\n      zipcode: props.savedZip[key].zip,\n      name: props.savedZip[key].name,\n      editing: false,\n      onSave: props.editLocalZip,\n      deletezip: props.deletezip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    });\n  })), console.log(\"timpe stamp in add render\", timeStamp), adding ? /*#__PURE__*/React.createElement(EditCard, {\n    key: timeStamp,\n    keyProp: timeStamp,\n    zipcode: '',\n    name: '',\n    editing: true,\n    onSave: onNewSave,\n    deletezip: props.deletezip,\n    onCancel: () => {\n      setAddingState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 195\n    }\n  }, \"add\"));\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/extension/src/components/manageZip.js"],"names":["React","useState","useEffect","createRef","ManageZip","props","adding","setAddingState","timeStamp","setTimeStamp","savedZip","setLocalSavedZip","addClick","console","log","time","Date","getTime","onNewSave","key","editedObj","editLocalZip","editZipClick","addEditZip","zip","deletezip","Object","keys","map","name","closeEdit","EditCard","editing","changeEditState","zipcode","setZipcode","setName","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleNameChange","onSave","keyProp","window","alert","removeClicked","cancelClicked","onCancel","handleEditClicked","text","lastChar","slice","ascii","charCodeAt","length","SaveZipList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\"\n\nexport default function ManageZip(props) {\n\tconst [adding, setAddingState]= useState(false)\n\tconst [timeStamp, setTimeStamp] = useState(0)\n\tconst [savedZip, setLocalSavedZip] = useState({})\n\tconst addClick = () =>{\n\t\tconsole.log(\"add click\")\n\t\tconst time = new Date().getTime()\n\t\tsetTimeStamp(time)\n\t\tsetAddingState(true)\n\n\t}\n\tconst onNewSave = (key, editedObj)=>{\n\t\tconsole.log('key',key)\n\t\tconsole.log('newsave',editedObj)\n\t\teditLocalZip(key, editedObj)\n\t\tsetAddingState(false)\n\t\t\n\t}\n\t\n\tuseEffect(() => {\n\t\t//console.log(\"in use effect edit zip click\")\n\t\tif (props.editZipClick){\n\n\t\t\tsetLocalSavedZip(props.savedZip)\n\t\t\t\n\t\t\tconsole.log(\"savedzip in manage\",savedZip)\n\t\t}\n\t\t\n\t},[props.editZipClick])\n\n\tconst addEditZip = (zip, editedObj)=>{\n\t\t//console.log(\"add zip edit call\")\n\t\tsavedZip[zip] = editedObj\n\t\t//console.log(\"new sldkfiew\", savedZip)\n\t\tsetLocalSavedZip(savedZip)\n\t}\n\n\tconst deletezip = (key) =>{\n\t\tconsole.log('delete call')\n\t\tdelete savedZip[key]\n\t\tsetLocalSavedZip(savedZip)\n\t}\n\n\tif (props.editZipClick){\n\t\t\n\t\t\n\treturn (\n\n\t\t<>\n\t\t<div className=\"edit-window\">\n\t\t\t<>{Object.keys(props.savedZip).map(key => {\n\t\t\t//console.log(\"in edit\", key)\n\t\t\treturn <EditCard key={key} keyProp ={key} zipcode={props.savedZip[key].zip} name= {props.savedZip[key].name} editing={false} onSave={addEditZip} deletezip={deletezip}></EditCard>\n\t\t\t\n\t\t})}\n\t\t\t{adding?<EditCard key ={timeStamp} keyProp={timeStamp} zipcode={''} name={''} editing={true} onSave={onNewSave} deletezip={deletezip} onCancel={()=>{setAddingState(false)}}></EditCard>: <button onClick={addClick}>add</button> }\n\t\t\n\t\t</>\n\t\t\t{adding?'':<button onClick={()=>{props.closeEdit(savedZip)}}>done</button>}\n\t\t\t<button onClick={()=>{props.closeEdit()}}>close</button>\n\t\t</div>\n\t\t</>\n\t)}\n\t\n\telse{ return null}\n\n}\n\n\n\nfunction EditCard(props){\n\tconst [editing, changeEditState]= useState(props.editing);\n\tconst [zipcode, setZipcode] = useState(props.zipcode?props.zipcode:'')\n\tconst [name, setName]= useState(props.name?props.name:'')\n\n\n\tconst handleOnChange = (event) => {\n\t\t//console.log(\"animation\", animation);\n\t\tconst input = event.currentTarget.value;\n\t\tconst returnInput = maxFive(input);\n\t\tsetZipcode(onlyNum(returnInput));\n\t  };\n\n\tconst handleNameChange = (event) =>{\n\t\tconst input = event.currentTarget.value;\n\t\t//console.log(\"name input\", input)\n\t\t\n\t\tsetName(input)\n\t}\n\n\tconst onSave = (event) => {\n\t\tif(zipcode !==''){\n\t\tconsole.log(\"props.key in card\", props.keyProp)\n\t\tprops.onSave(props.keyProp, {name:name, zip:zipcode})\n\t\tchangeEditState(false)\n\t\t}\n\t\telse{window.alert(\"zipcode can not be empty\")// need a better way to show this}\n\t}\n}\n\n\tconst removeClicked = (event) =>{\n\t\tconsole.log(\"remove click\")\n\t\tprops.deletezip(props.keyProp)\n\t}\n\n\tconst cancelClicked = (event) =>{\n\t\tconsole.log(\"cancelClicked\")\n\t\tsetZipcode(props.zipcode)\n\t\tsetName(props.name)\n\t\tif(props.onCancel)props.onCancel();\n\t\tchangeEditState(false)\n\t}\n\n\tconst handleEditClicked = (event) =>{\n\t\tchangeEditState(true)\n\n\t}\n\n\t/* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n    //   setAnimation(\"shake\");\n    //   console.log(\"text is longer than 5 characters\")\n    //   console.log(\"animation 1:\", animation);\n    //   setTimeout(function () {\n    //     setAnimation();\n    //     console.log(\"animation 2:\", animation);\n    //   }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n\tif (props.zipcode ===null){\n\t\tchangeEditState(true)\n\t}\n\tif (!editing){\n\t\t//console.log(\"not editing create in edit card\")\n\t\treturn (\n\t\t<div className=\"edit-zip-card\">\n\t\t<label htmlFor=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input card-input-readonly\" type=\"text\" placeholder='name this zipcode' value={name} readOnly/>\n\t\t<label htmlFor=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input card-input-readonly\" placeholder='zipcode xxxxx' readOnly value={zipcode}/>\n\t\t<button onClick={handleEditClicked}>edit</button>\n\t\t<button onClick={removeClicked}>remove</button>\n\t\t</div>\n\t\t)}\n\n\telse {\n\t\t//console.log(\" editing create in edit card\")\n\treturn(\n\t\t<div className=\"edit-zip-card\">\n\t\t<label htmlFor=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input\" type=\"text\" value={name}  placeholder='name this zipcode' onChange ={handleNameChange}/>\n\t\t<label htmlFor=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input\" onChange={handleOnChange} placeholder='zipcode xxxxx' value={zipcode}/>\n\t\t<button onClick={onSave}>save</button>\n\t\t<button onClick={cancelClicked}>cancel</button>\n\t\t</div>\n\t)}\n\n\t\n\n\n}\n\nfunction SaveZipList(props){\n\tconst [adding, setAddingState]= useState(false)\n\tconst [timeStamp, setTimeStamp] = useState(0)\n\tconst addClick = () =>{\n\t\tconsole.log(\"add click\")\n\t\tconst time = new Date().getTime()\n\t\tsetTimeStamp(time)\n\t\tsetAddingState(true)\n\n\t}\n\tconst onNewSave = (key, editedObj)=>{\n\t\tconsole.log('key',key)\n\t\tconsole.log('newsave',editedObj)\n\t\tprops.editLocalZip(key, editedObj)\n\t\tsetAddingState(false)\n\t\t\n\t}\n\treturn (\n\t\t<>\n\t\t\n\t\t<>{Object.keys(props.savedZip).map(key => {\n\t\t\t//console.log(\"in edit\", key)\n\t\t\treturn <EditCard key={key} keyProp ={key} zipcode={props.savedZip[key].zip} name= {props.savedZip[key].name} editing={false} onSave={props.editLocalZip} deletezip={props.deletezip}></EditCard>\n\t\t\t\n\t\t})}</>\n\t\t{console.log(\"timpe stamp in add render\", timeStamp)}\n\t\t{adding?<EditCard key ={timeStamp} keyProp={timeStamp} zipcode={''} name={''} editing={true} onSave={onNewSave} deletezip={props.deletezip} onCancel={()=>{setAddingState(false)}}></EditCard>: <button onClick={addClick}>add</button> }\n\t\t\n\t\t</>\n\t\n\t)\n\n}\n"]},"metadata":{},"sourceType":"module"}