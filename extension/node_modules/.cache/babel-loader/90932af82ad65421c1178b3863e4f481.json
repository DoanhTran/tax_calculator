{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/tax_calculator/src/components/manageZip.js\";\nimport React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\";\n\nfunction EditCard(props) {\n  const [editing, changeEditState] = useState(false);\n  const [zipcode, setZipcode] = useState(props.zipcode ? props.zipcode : '');\n  const [name, setName] = useState(props.name ? props.name : '');\n\n  const handleOnChange = event => {\n    //console.log(\"animation\", animation);\n    const input = event.currentTarget.value;\n    const returnInput = maxFive(input);\n    setZipcode(onlyNum(returnInput));\n  };\n\n  const handleNameChange = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleEditClicked = event => {\n    changeEditState(true);\n  };\n  /* Extract only numbers out of input box and returns a string of text \n     containing at most 6 numbers\n     Parameter: text is a string\n     Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n      //   setAnimation(\"shake\");\n      //   console.log(\"text is longer than 5 characters\")\n      //   console.log(\"animation 1:\", animation);\n      //   setTimeout(function () {\n      //     setAnimation();\n      //     console.log(\"animation 2:\", animation);\n      //   }, 200);\n      return text.slice(0, 5);\n    }\n\n    return text;\n  }\n\n  if (props.zipcode === null) {\n    changeEditState(true);\n  }\n\n  if (!editing) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      forHtml: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input card-input-readonly\",\n      type: \"text\",\n      value: name,\n      onChange: handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      forHtml: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input card-input-readonly\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }\n    }, zipcode), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleEditClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }\n    }, \"edit\"), /*#__PURE__*/React.createElement(\"butoon\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-zip-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      forHtml: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }\n    }, \"name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      className: \"card-input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }\n    }, props.name ? props.name : ''), /*#__PURE__*/React.createElement(\"label\", {\n      forHtml: \"zip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }\n    }, \"zip code:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"zip\",\n      type: \"text\",\n      className: \"card-input\",\n      onChange: handleOnChange,\n      value: zipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }\n    }, \"save\"), /*#__PURE__*/React.createElement(\"butoon\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }\n    }, \"remove\"));\n  }\n}\n\nexport default function ManageZip(props) {\n  let editZipList = [];\n  useEffect(() => {\n    if (props.editZipClick) {\n      editZipList = make_editable_card();\n    }\n  }, [props.editZipClick]);\n\n  function make_editable_card() {\n    let htmlList = [];\n    Object.keys(props.savedZip).forEach(index => {\n      const card = /*#__PURE__*/React.createElement(EditCard, {\n        key: index,\n        zipcode: index,\n        name: props.savedZip[index].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      });\n      htmlList.push(card);\n    });\n    return htmlList;\n  }\n\n  if (props.editZipClick) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }\n    }, editZipList));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/manageZip.js"],"names":["React","useState","useEffect","createRef","EditCard","props","editing","changeEditState","zipcode","setZipcode","name","setName","handleOnChange","event","input","currentTarget","value","returnInput","maxFive","onlyNum","handleNameChange","handleEditClicked","text","lastChar","slice","ascii","charCodeAt","length","ManageZip","editZipList","editZipClick","make_editable_card","htmlList","Object","keys","savedZip","forEach","index","card","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"../App.css\"\n\n\nfunction EditCard(props){\n\tconst [editing, changeEditState]= useState(false);\n\tconst [zipcode, setZipcode] = useState(props.zipcode?props.zipcode:'')\n\tconst [name, setName]= useState(props.name?props.name:'')\n\n\tconst handleOnChange = (event) => {\n\t\t//console.log(\"animation\", animation);\n\t\tconst input = event.currentTarget.value;\n\t\tconst returnInput = maxFive(input);\n\t\tsetZipcode(onlyNum(returnInput));\n\t  };\n\n\tconst handleNameChange = (event) =>{\n\t\tsetName(event.currentTarget.value)\n\t}\n\n\tconst handleEditClicked = (event) =>{\n\t\tchangeEditState(true)\n\n\t}\n\n\t/* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  function maxFive(text) {\n    if (text.length > 5) {\n    //   setAnimation(\"shake\");\n    //   console.log(\"text is longer than 5 characters\")\n    //   console.log(\"animation 1:\", animation);\n    //   setTimeout(function () {\n    //     setAnimation();\n    //     console.log(\"animation 2:\", animation);\n    //   }, 200);\n      return text.slice(0, 5);\n    }\n    return text;\n  }\n\n\tif (props.zipcode ===null){\n\t\tchangeEditState(true)\n\t}\n\tif (!editing){\n\t\treturn (\n\t\t<div className=\"edit-zip-card\">\n\t\t<label forHtml=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input card-input-readonly\" type=\"text\" value={name} onChange ={handleNameChange}></input>\n\t\t<label forHtml=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input card-input-readonly\" readOnly>{zipcode}</input>\n\t\t<button onClick={handleEditClicked}>edit</button>\n\t\t<butoon>remove</butoon>\n\t\t</div>\n\t\t)}\n\n\telse {\n\treturn(\n\t\t<div className=\"edit-zip-card\">\n\t\t<label forHtml=\"name\">name:</label>\n\t\t<input name=\"name\" className=\"card-input\" type=\"text\">{props.name?props.name:''}</input>\n\t\t<label forHtml=\"zip\">zip code:</label>\n\t\t<input name=\"zip\" type=\"text\" className=\"card-input\" onChange={handleOnChange} value={zipcode}></input>\n\t\t<button>save</button>\n\t\t<butoon>remove</butoon>\n\t\t</div>\n\t)}\n\n\t\n\n\n}\n\nexport default function ManageZip(props) {\n\tlet editZipList =[]\n\tuseEffect(() => {\n\t\tif(props.editZipClick){\n\t\t\teditZipList = make_editable_card()\n\t\t}\n\t},[props.editZipClick])\n\t\n\t\n\tfunction make_editable_card(){\n\t\tlet htmlList = []\n\t\tObject.keys(props.savedZip).forEach(index=>{\n\t\t\tconst card = <EditCard key={index} zipcode={index} name={props.savedZip[index].name} ></EditCard>\n\t\t\thtmlList.push(card)\n\t\t})\n\t\treturn htmlList\n\n\t}\n\n\t\n\t\n\t\n\t\n\t\n\tif (props.editZipClick){\n\t\t\n\treturn (\n\t\t<>\n\t\t<div className=\"edit-window\">\n\t\t\t{editZipList}\n\t\t</div>\n\t\t</>\n\t)}\n\t\n\telse{ return <div></div>}\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}