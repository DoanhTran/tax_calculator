{"ast":null,"code":"import _classCallCheck from\"/Users/mina/Desktop/tax_calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mina/Desktop/tax_calculator/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/mina/Desktop/tax_calculator/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/mina/Desktop/tax_calculator/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";var initial=\"nodata;\";var fetching=\"fetching data\";/*global chrome*/var DisplayTax=/*#__PURE__*/function(_React$Component){_inherits(DisplayTax,_React$Component);var _super=_createSuper(DisplayTax);function DisplayTax(props){var _this;_classCallCheck(this,DisplayTax);_this=_super.call(this,props);console.log(\"display\");chrome.storage.sync.get('currentTax',function(result){console.log(\"get dat is called\");console.log('Value currently is '+result.currentTax);console.log(result);console.log(result.currentTax);if(result.currentTax!==undefined){this.state={error:null,isLoaded:false,taxRate:result.currentTax.rate,taxRegion:result.currentTax.tReg};}else{this.state={error:null,isLoaded:false,taxRate:initial,taxRegion:initial};}});return _this;}_createClass(DisplayTax,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this2=this;if(this.props.save!==prevProps.save&&this.props.save===true){console.log(\"saveindisplay\");var zip=this.props.zipcode;this.setState({taxRate:fetching,taxRegion:fetching});fetch(\"http://0.0.0.0:5000/taxrate/\"+zip,{methode:\"GET\"// headers: { \"Access-Control-Allow-Origin\": \"*\" },\n}).then(function(res){return res.json();}).then(function(result){console.log(\"inresult\");console.log(result);if(result.error){console.log(\"not valid zip\");}else{chrome.storage.sync.set({currentTax:{rate:result.data.EstimatedCombinedRate,tReg:result.data.TaxRegionName,zip:zip}},function(){window.alert(\"is saved\");});}_this2.setState({isLoaded:true,taxRate:result.error?result.error:result.data.EstimatedCombinedRate,taxRegion:result.error?result.error:result.data.TaxRegionName});},function(error){console.log(\"inerror\");console.log(error);_this2.setState({error:true,isLoaded:true});});// } else if (\n//   this.props.save !== prevProps.save &&\n//   this.props.save === false\n// ) {\n//     this.setState({ taxRate: fetching, taxRegion: fetching })\n// }\n}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,!this.state.error?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",null,\"tax rate: \",this.state.taxRate),/*#__PURE__*/React.createElement(\"h6\",null,\"tax regian name:\",this.state.taxRegion)):/*#__PURE__*/React.createElement(\"h6\",null,\"error: $\",this.state.error));}}]);return DisplayTax;}(React.Component);export default DisplayTax;","map":{"version":3,"sources":["/Users/mina/Desktop/tax_calculator/src/components/displaytax.js"],"names":["React","initial","fetching","DisplayTax","props","console","log","chrome","storage","sync","get","result","currentTax","undefined","state","error","isLoaded","taxRate","rate","taxRegion","tReg","prevProps","save","zip","zipcode","setState","fetch","methode","then","res","json","set","data","EstimatedCombinedRate","TaxRegionName","window","alert","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst initial = \"nodata;\";\nconst fetching = \"fetching data\";\n\n/*global chrome*/\n\nclass DisplayTax extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    console.log(\"display\");\n    chrome.storage.sync.get('currentTax', function(result) {\n      console.log(\"get dat is called\");\n        console.log('Value currently is ' + result.currentTax);\n        console.log(result)\n        console.log(result.currentTax)\n        if (result.currentTax!==undefined){\n          this.state = {\n            error: null,\n            isLoaded: false,\n            taxRate: result.currentTax.rate,\n            taxRegion:result.currentTax.tReg\n          };\n        }\n        else{\n          this.state = {\n            error: null,\n            isLoaded: false,\n            taxRate: initial,\n            taxRegion:initial\n          };\n        }\n      });\n   \n  }\n\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.save !== prevProps.save && this.props.save === true) {\n      console.log(\"saveindisplay\");\n      const zip = this.props.zipcode\n      this.setState({ taxRate: fetching, taxRegion: fetching });\n\n      fetch(\"http://0.0.0.0:5000/taxrate/\" + zip, {\n        methode: \"GET\",\n\n        // headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            console.log(\"inresult\");\n            console.log(result);\n            if (result.error){\n              console.log(\"not valid zip\")\n            }\n            else{\n              chrome.storage.sync.set({currentTax: {rate:result.data.EstimatedCombinedRate, tReg:result.data.TaxRegionName, zip:zip} }, function() {\n                window.alert(\"is saved\")\n              });\n              \n            }\n            this.setState({\n              isLoaded: true,\n\n              taxRate: result.error\n                ? result.error\n                : result.data.EstimatedCombinedRate,\n              taxRegion: result.error\n                ? result.error\n                : result.data.TaxRegionName,\n            });\n          },\n          (error) => {\n            console.log(\"inerror\");\n            console.log(error);\n            this.setState({ error: true, isLoaded: true });\n          }\n        );\n      // } else if (\n      //   this.props.save !== prevProps.save &&\n      //   this.props.save === false\n      // ) {\n      //     this.setState({ taxRate: fetching, taxRegion: fetching })\n\n      // }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.error ? (\n          <div>\n            <h6>tax rate: {this.state.taxRate}</h6>\n            <h6>tax regian name:{this.state.taxRegion}</h6>\n          </div>\n        ) : (\n          <h6>error: ${this.state.error}</h6>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DisplayTax;\n"]},"metadata":{},"sourceType":"module"}