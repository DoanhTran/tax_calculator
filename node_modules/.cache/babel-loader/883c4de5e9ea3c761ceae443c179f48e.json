{"ast":null,"code":"var _jsxFileName = \"/Users/doanhtran/Downloads/GitHub/tax-calculator/src/components/inputbox/inputBox.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport './inputbox.css';\nexport default function InputBox() {\n  const [zipcode, setZipcode] = useState();\n  const [save, setSave] = useState(false);\n  const [animation, setAnimation] = useState();\n\n  const handleOnChange = event => {\n    const input = event.currentTarget.value;\n    setZipcode(inputCheck(input));\n  };\n\n  const handleSubmit = event => {\n    setSave(true);\n  };\n  /* Check if input contains only numbers and max 5 characters\n  Parameter: text is a string\n  Returns a five-character string of only numbers or empty string*/\n\n\n  function inputCheck(text) {\n    if (text.length > 5) {\n      const temp = text.slice(0, -1);\n    }\n\n    let lastChar = temp.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"zipcodeForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Zipcode \\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: animation,\n    type: \"text\",\n    maxLength: \"6\",\n    value: zipcode,\n    size: \"10\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n}","map":{"version":3,"sources":["/Users/doanhtran/Downloads/GitHub/tax-calculator/src/components/inputbox/inputBox.jsx"],"names":["React","useState","useEffect","InputBox","zipcode","setZipcode","save","setSave","animation","setAnimation","handleOnChange","event","input","currentTarget","value","inputCheck","handleSubmit","text","length","temp","slice","lastChar","ascii","charCodeAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAE/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;;AAEA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAC9B,UAAMC,KAAK,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAlC;AACAT,IAAAA,UAAU,CAACU,UAAU,CAACH,KAAD,CAAX,CAAV;AAEH,GAJD;;AAQA,QAAMI,YAAY,GAAIL,KAAD,IAAU;AAC3BJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;AAMA;;;;;AAGA,WAASQ,UAAT,CAAoBE,IAApB,EAA0B;AACtB,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAoB;AAChB,YAAMC,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAa,CAAC,CAAd,CAAb;AACH;;AACD,QAAIC,QAAQ,GAAGF,IAAI,CAACC,KAAL,CAAW,CAAC,CAAZ,CAAf;AACA,QAAIE,KAAK,GAAGD,QAAQ,CAACE,UAAT,CAAoB,CAApB,CAAZ;;AACA,QAAI,MAAMD,KAAN,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AAChC,aAAOL,IAAP;AACC,KAFD,MAEO;AACP,aAAOA,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACC;AAGJ;;AAED,sBACI;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAgC,IAAA,QAAQ,EAAIJ,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI;AACI,IAAA,SAAS,EAAGR,SADhB;AAEI,IAAA,IAAI,EAAG,MAFX;AAGI,IAAA,SAAS,EAAG,GAHhB;AAII,IAAA,KAAK,EAAIJ,OAJb;AAKI,IAAA,IAAI,EAAG,IALX;AAMI,IAAA,QAAQ,EAAIM,cANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAaI;AAAQ,IAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CADJ;AAoBH","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport './inputbox.css';\n\nexport default function InputBox (){\n\n    const [zipcode, setZipcode] = useState();\n    const [save, setSave] = useState(false);\n    const [animation, setAnimation] = useState();\n\n    const handleOnChange = (event) => {\n        const input = event.currentTarget.value;\n        setZipcode(inputCheck(input));\n\n    }\n\n\n\n    const handleSubmit = (event) =>{\n        setSave(true);\n    }\n\n\n\n    /* Check if input contains only numbers and max 5 characters\n    Parameter: text is a string\n    Returns a five-character string of only numbers or empty string*/\n    function inputCheck(text) {\n        if (text.length > 5){\n            const temp = text.slice(0,-1);\n        }\n        let lastChar = temp.slice(-1);\n        let ascii = lastChar.charCodeAt(0);\n        if (48 <= ascii && ascii <= 57) {\n        return text;\n        } else {\n        return text.slice(0, -1);\n        }\n\n        \n    }\n      \n    return(\n        <form className = \"zipcodeForm\" onSubmit = {handleSubmit}>\n\n            <label>\n                Zipcode &#160;\n            </label>\n            <input\n                className ={animation}\n                type = \"text\"\n                maxLength = \"6\"\n                value = {zipcode}\n                size = '10'\n                onChange = {handleOnChange}\n            />\n            <button type = \"submit\">\n                Submit\n            </button>\n\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}