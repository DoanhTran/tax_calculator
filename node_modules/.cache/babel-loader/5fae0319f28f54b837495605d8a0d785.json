{"ast":null,"code":"var _jsxFileName = \"/Users/doanhtran/Downloads/GitHub/tax-calculator/src/components/Test2/Test2.js\";\nimport React, { useState, useEffect, useRef } from \"react\"; //import Stack from 'Stack';\n\n/*global chrome*/\n\nexport default function Test2() {\n  const title = useRef(null);\n  const tab_title = useRef('');\n  var list = [];\n\n  function result(array) {\n    console.log(\"is result an array\", array);\n    console.log(\"is first item a node\", array[0]);\n    findprice(array[0]);\n  }\n  /*result is body element node i think ```o_o```*/\n\n\n  function findprice(node) {\n    //node.setAttribute('visited', true);\n    //console.log(\"node's visited\", node.getAttribute('visited'));\n    if (node.nodeType === 3 && node.nodeValue.includes('$')) {\n      list.append(node);\n      title.current.innerHTML = title + node.nodeValue;\n      console.log(list.length);\n    }\n\n    console.log('1');\n\n    if (node.hasChildNodes()) {\n      let children = node.childNodes;\n\n      for (let i = 0; i < children.length; i++) {\n        findprice(children[i]);\n      }\n    } // if (node.childNodes.length === 0){\n    //     node.childNodes.forEach(element => {\n    //         findprice(element);    \n    //     });  \n    // }\n\n  }\n\n  const code = `(function getDocumentNode(){\n\n    })`;\n  chrome.tabs.query({\n    active: true\n  }, function (tabs) {\n    var tab = tabs[0];\n    list = []; //tab_title.current = tab.title;\n    //hmm getting the body node\n\n    chrome.tabs.executeScript(tab.id, {\n      code: 'document'\n    }, result);\n  }); // var tab_title = '';\n  // function display_h1 (results){\n  //     let h1=results;\n  //     document.querySelector(\"#id1\").innerHTML = \"<p>tab title: \" + tab_title + \"</p><p>dom h1: \" + h1 + \"</p>\";\n  // }\n  // chrome.tabs.query({active: true}, function(tabs) {\n  // var tab = tabs[0];\n  // tab_title = tab.title;\n  // chrome.tabs.executeScript(tab.id, {\n  //     code: 'document.querySelector(\"h1\").textContent'\n  // }, display_h1);\n  // });\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    ref: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"''\");\n}","map":{"version":3,"sources":["/Users/doanhtran/Downloads/GitHub/tax-calculator/src/components/Test2/Test2.js"],"names":["React","useState","useEffect","useRef","Test2","title","tab_title","list","result","array","console","log","findprice","node","nodeType","nodeValue","includes","append","current","innerHTML","length","hasChildNodes","children","childNodes","i","code","chrome","tabs","query","active","tab","executeScript","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAkD,OAAlD,C,CACA;;AACA;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE5B,QAAMC,KAAK,GAAGF,MAAM,CAAC,IAAD,CAApB;AACA,QAAMG,SAAS,GAAGH,MAAM,CAAC,EAAD,CAAxB;AACA,MAAII,IAAI,GAAG,EAAX;;AAGA,WAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCF,KAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAAC,CAAD,CAAzC;AACAG,IAAAA,SAAS,CAACH,KAAK,CAAC,CAAD,CAAN,CAAT;AAEH;AACD;;;AACA,WAASG,SAAT,CAAmBC,IAAnB,EAAwB;AACpB;AACA;AACA,QAAIA,IAAI,CAACC,QAAL,KAAkB,CAAlB,IAAuBD,IAAI,CAACE,SAAL,CAAeC,QAAf,CAAwB,GAAxB,CAA3B,EAAyD;AACrDT,MAAAA,IAAI,CAACU,MAAL,CAAYJ,IAAZ;AACAR,MAAAA,KAAK,CAACa,OAAN,CAAcC,SAAd,GAA0Bd,KAAK,GAAGQ,IAAI,CAACE,SAAvC;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACa,MAAjB;AACH;;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AACA,QAAIE,IAAI,CAACQ,aAAL,EAAJ,EAAyB;AAErB,UAAIC,QAAQ,GAAGT,IAAI,CAACU,UAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACF,MAA7B,EAAqCI,CAAC,EAAtC,EAAyC;AAErCZ,QAAAA,SAAS,CAACU,QAAQ,CAACE,CAAD,CAAT,CAAT;AAEH;AACJ,KAjBmB,CAoBpB;AACA;AACA;AACA;AACA;;AACH;;AAGD,QAAMC,IAAI,GAAI;;OAAd;AAGAC,EAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAlB,EAAkC,UAASF,IAAT,EAAe;AAC7C,QAAIG,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAd;AACApB,IAAAA,IAAI,GAAG,EAAP,CAF6C,CAG7C;AAEA;;AACAmB,IAAAA,MAAM,CAACC,IAAP,CAAYI,aAAZ,CAA0BD,GAAG,CAACE,EAA9B,EAAkC;AAClCP,MAAAA,IAAI,EAAE;AAD4B,KAAlC,EAEGjB,MAFH;AAGH,GATD,EA7C4B,CA0D5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACA;AAAI,IAAA,GAAG,EAAIH,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAGH","sourcesContent":["import React, { useState, useEffect, useRef} from \"react\";\n//import Stack from 'Stack';\n/*global chrome*/\n\nexport default function Test2 (){\n\n    const title = useRef(null)\n    const tab_title = useRef('')\n    var list = []\n\n\n    function result(array){\n        console.log(\"is result an array\",array);\n        console.log(\"is first item a node\", array[0]);\n        findprice(array[0]);\n    \n    }\n    /*result is body element node i think ```o_o```*/\n    function findprice(node){\n        //node.setAttribute('visited', true);\n        //console.log(\"node's visited\", node.getAttribute('visited'));\n        if (node.nodeType === 3 && node.nodeValue.includes('$')) {\n            list.append(node);\n            title.current.innerHTML = title + node.nodeValue;\n            console.log(list.length);\n        }\n        console.log('1');\n        if (node.hasChildNodes()){\n            \n            let children = node.childNodes;  \n            for (let i = 0; i < children.length; i++){\n                \n                findprice(children[i]);\n\n            }      \n        }\n        \n        \n        // if (node.childNodes.length === 0){\n        //     node.childNodes.forEach(element => {\n        //         findprice(element);    \n        //     });  \n        // }\n    }\n\n    \n    const code = `(function getDocumentNode(){\n\n    })`\n    chrome.tabs.query({active: true}, function(tabs) {\n        var tab = tabs[0];\n        list = [];\n        //tab_title.current = tab.title;\n\n        //hmm getting the body node\n        chrome.tabs.executeScript(tab.id, {\n        code: 'document'\n        }, result);\n    });\n    \n\n    \n    // var tab_title = '';\n    // function display_h1 (results){\n    //     let h1=results;\n    //     document.querySelector(\"#id1\").innerHTML = \"<p>tab title: \" + tab_title + \"</p><p>dom h1: \" + h1 + \"</p>\";\n    // }\n    // chrome.tabs.query({active: true}, function(tabs) {\n    // var tab = tabs[0];\n    // tab_title = tab.title;\n    // chrome.tabs.executeScript(tab.id, {\n    //     code: 'document.querySelector(\"h1\").textContent'\n    // }, display_h1);\n    // });\n\n    return(\n    <h1 ref = {title} >''</h1>\n    )\n}"]},"metadata":{},"sourceType":"module"}