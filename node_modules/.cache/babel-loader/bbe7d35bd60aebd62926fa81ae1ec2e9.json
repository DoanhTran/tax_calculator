{"ast":null,"code":"console.log(\"running content.js\");//  /*global chrome*/\n// import React, {useEffect, useState, useRef} from 'react'; \n// import ReactDOM, { findDOMNode } from 'react-dom';\n// import \"./content.css\";\n// import Frame, { FrameContextConsumer }from 'react-frame-component';\n// var PRICE = 'price';\n// var COORDS = 'coords';\n// console.log(\"running content.js\")\n// function Tax() {\n//     const [tax, setTax] = useState();\n//     const [price, setPrice] = useState();\n//     //const [whitelist, setWhiteList] = useState(true);\n//     // const [x, setX] = useState(0)\n//     // const [y, setY] = useState(0)\n//     //const pricetag = useRef(null);\n//     const windowSize = useRef(window.innerHeight);\n//     var timer;\n//     var url = 'URL';\n//     const [urlList, setUrlList] = useState({})\n//     const [currUrl, setCurrUrl] = useState(null);\n//     chrome.storage.sync.get('currentTax', function(result) {\n//         if (result.currentTax!==undefined){\n//             setTax(parseFloat(result.currentTax.rate)+1);\n//             getDOM(parseFloat(result.currentTax.rate)+1);\n//         }\n//     })\n//     chrome.extension.onMessage.addListener(\n//         function(request, sender, sendResponse) {\n//             console.log('received some info');\n//             console.log(\"tax type\",typeof(request.tax))\n//             if (request.type === PRICE && typeof(request.tax) === \"number\") {\n//                 setTax(request.tax);\n//                 if (request.whitelist){\n//                     console.log(\"tax rate\", request.tax);\n//                     getDOM(request.tax)\n//                 }\n//             }\n//             console.log('received some urls');\n//             console.log('type: ', request.type);\n//         }\n//     );\n//     document.addEventListener('scroll', handleScroll);\n//     function handleScroll(event){\n//         if (timer){\n//             clearTimeout(timer);\n//         }\n//         timer = setTimeout( function(){\n//             getDOM(tax);\n//         }, 200);\n//     }\n//     // document.addEventListener('mousemove', updateDOM);\n//     // function updateDOM(event){\n//     //     console.log(\"current position\", event.pageY);\n//     //     console.log(\"window size: \", windowSize.current);\n//     //     if(event.pageY > windowSize.current){\n//     //         getDOM(tax);\n//     //         windowSize.current = windowSize.current + window.innerHeight;\n//     //     }\n//     // }\n//     // useEffect(()=>{\n//     //     var e = document.event;\n//     //     if(e.pageY > windowSize.current){\n//     //         getDOM(tax);\n//     //         windowSize.current = windowSize.current + document.clientHeight;\n//     //     }\n//     // })\n//     // document.addEventListener('click', saveMousePos);\n//     // function saveMousePos(event) {\n//     //     setX(event.clientX)\n//     //     setY(event.clientY)\n//     //     console.log(event.clientX)\n//     //     console.log(event.clientY)\n//     // }\n//     function getDOM(tax){\n//         //var list = []\n//         function findDollarSign(node){\n//             if (node.nodeType === 3){\n//                 const dollarIndex = node.nodeValue.indexOf('$')\n//                 if(dollarIndex !== -1 ) {\n//                     //list.append(node);\n//                     const parentEl = node.parentElement\n//                     const classname = parentEl.className;\n//                     const price = findPrice(node.nodeValue.slice(dollarIndex+1), tax)\n//                     const original = node.nodeValue;\n//                     parentEl.addEventListener('mouseenter', event => {\n//                         if (price !== null){\n//                             setPrice('$' + price);\n//                             //pricetag.current.style.display = \"block\";\n//                             app.style.display = \"block\";\n//                         }\n//                     })\n//                     parentEl.addEventListener('mouseleave', event =>{\n//                         //pricetag.current.style.display = \"none\";\n//                         app.style.display = \"none\";\n//                         setPrice();\n//                     })\n//                     list.push(classname);\n//                     // console.log(list);\n//                     // console.log('$ node');\n//                     // console.log (\"classname: \", classname);\n//                 }\n//             }\n//             //console.log('no $');\n//             if (node.hasChildNodes()){\n//                 let children = node.childNodes;  \n//                 for (let i = 0; i < children.length; i++){\n//                     findDollarSign(children[i]);\n//                 }      \n//             }\n//         }\n//         /* Find value after the dollar sign and multiply by tax. Returns null if there is no price \n//         after the dollar sign.\n//         Parameters: \n//         text is text after the dollar sign\n//         tax is the tax rate (e.g 1.08)\n//         Precondition: text is a string */\n//         function findPrice(text, tax){\n//             let price = '';\n//             for(let i = 0; i<text.length; i++){\n//                 let ascii = text.charCodeAt(i);\n//                 if (ascii === 32 || ascii === 44 || ascii === 46 || (48 <= ascii && ascii <= 57)){\n//                     if (ascii !== 44) price = price + text.substr(i,1);\n//                 }\n//                 else{\n//                     break;\n//                 }\n//             }\n//             let value = (parseFloat(price) * tax);\n//             //console.log(\"price:\", value);\n//             if(isNaN(price)) return null;\n//             const whole = Math.floor(value).toString();\n//             //console.log(\"whole:\", whole);\n//             const dec = (value - whole).toFixed(2).toString().slice(1);\n//             //console.log(\"dec:\", dec);\n//             price = commatize(whole) + dec;\n//             return price;\n//         }\n//         function commatize(price){\n//             if(price.length<4){\n//                 return price;\n//             }\n//             let lastThree = price.slice(-3);\n//             let begin = commatize(price.slice(0,-3));\n//             return begin + ',' + lastThree;\n//         }\n//         var list =[];\n//         findDollarSign(document);\n//         return list;\n//     }\n//     return (\n//         <Frame head={[<link type=\"text/css\" rel=\"stylesheet\" href={chrome.runtime.getURL(\"/static/css/content.css\")} ></link>]}> \n//             <FrameContextConsumer>\n//                 {\n//                     ({document, window}) => {\n//                         return(\n//                             <div className='my-extension'>\n//                                 <h1>{price}</h1>\n//                             </div>\n//                         )\n//                     }\n//                 }\n//             </FrameContextConsumer>\n//         </Frame>\n//     )\n// }\n// const app = document.createElement('div');\n// app.id = \"my-extension-root\";\n// document.body.appendChild(app);\n// ReactDOM.render(<Tax/>, app);\n// app.style.display = \"none\";\n// document.addEventListener('mousemove', saveMousePos);\n// function saveMousePos(event) {\n//     // console.log(event.pageX)\n//     // console.log(event.pageY)\n//     var app = document.getElementById(\"my-extension-root\");\n//     app.style.position = \"absolute\";\n//     app.style.left = event.pageX+'px';\n//     app.style.top = event.pageY+'px';\n// }\n/* <Frame head={[<link type=\"text/css\" rel=\"stylesheet\" href={chrome.runtime.getURL(\"/static/css/content.css\")} ></link>]}> \n            <FrameContextConsumer>\n            \n                \n            </FrameContextConsumer>\n        </Frame> */ // {\n//     // Callback is invoked with iframe's window and document instances\n//         //({document, window}) => {\n//             // Render Children\n//         //}\n//     }","map":{"version":3,"sources":["/Users/doanhtran/Downloads/GitHub/tax-calculator/src/content.js"],"names":["console","log"],"mappings":"AAAAA,OAAO,CAACC,GAAR,CAAY,ooBAOA;AACA;AACA;AACA;AAIA;AACA","sourcesContent":["console.log(\"running content.js\")\n//  /*global chrome*/\n// import React, {useEffect, useState, useRef} from 'react'; \n// import ReactDOM, { findDOMNode } from 'react-dom';\n// import \"./content.css\";\n// import Frame, { FrameContextConsumer }from 'react-frame-component';\n\n// var PRICE = 'price';\n// var COORDS = 'coords';\n\n\n\n// console.log(\"running content.js\")\n\n// function Tax() {\n\n//     const [tax, setTax] = useState();\n//     const [price, setPrice] = useState();\n//     //const [whitelist, setWhiteList] = useState(true);\n//     // const [x, setX] = useState(0)\n//     // const [y, setY] = useState(0)\n//     //const pricetag = useRef(null);\n//     const windowSize = useRef(window.innerHeight);\n//     var timer;\n//     var url = 'URL';\n//     const [urlList, setUrlList] = useState({})\n//     const [currUrl, setCurrUrl] = useState(null);\n\n\n    \n//     chrome.storage.sync.get('currentTax', function(result) {\n//         if (result.currentTax!==undefined){\n//             setTax(parseFloat(result.currentTax.rate)+1);\n//             getDOM(parseFloat(result.currentTax.rate)+1);\n//         }\n//     })\n\n\n//     chrome.extension.onMessage.addListener(\n//         function(request, sender, sendResponse) {\n//             console.log('received some info');\n//             console.log(\"tax type\",typeof(request.tax))\n//             if (request.type === PRICE && typeof(request.tax) === \"number\") {\n//                 setTax(request.tax);\n//                 if (request.whitelist){\n//                     console.log(\"tax rate\", request.tax);\n//                     getDOM(request.tax)\n//                 }\n//             }\n\n//             console.log('received some urls');\n//             console.log('type: ', request.type);\n\n//         }\n//     );\n\n    \n//     document.addEventListener('scroll', handleScroll);\n//     function handleScroll(event){\n//         if (timer){\n//             clearTimeout(timer);\n//         }\n//         timer = setTimeout( function(){\n//             getDOM(tax);\n//         }, 200);\n//     }\n\n\n    \n//     // document.addEventListener('mousemove', updateDOM);\n\n//     // function updateDOM(event){\n//     //     console.log(\"current position\", event.pageY);\n//     //     console.log(\"window size: \", windowSize.current);\n//     //     if(event.pageY > windowSize.current){\n            \n//     //         getDOM(tax);\n//     //         windowSize.current = windowSize.current + window.innerHeight;\n//     //     }\n//     // }\n\n//     // useEffect(()=>{\n//     //     var e = document.event;\n//     //     if(e.pageY > windowSize.current){\n//     //         getDOM(tax);\n//     //         windowSize.current = windowSize.current + document.clientHeight;\n//     //     }\n//     // })\n\n//     // document.addEventListener('click', saveMousePos);\n\n//     // function saveMousePos(event) {\n//     //     setX(event.clientX)\n//     //     setY(event.clientY)\n//     //     console.log(event.clientX)\n//     //     console.log(event.clientY)\n//     // }\n\n//     function getDOM(tax){\n//         //var list = []\n\n//         function findDollarSign(node){\n//             if (node.nodeType === 3){\n//                 const dollarIndex = node.nodeValue.indexOf('$')\n//                 if(dollarIndex !== -1 ) {\n                \n//                     //list.append(node);\n//                     const parentEl = node.parentElement\n//                     const classname = parentEl.className;\n\n//                     const price = findPrice(node.nodeValue.slice(dollarIndex+1), tax)\n\n//                     const original = node.nodeValue;\n//                     parentEl.addEventListener('mouseenter', event => {\n//                         if (price !== null){\n//                             setPrice('$' + price);\n//                             //pricetag.current.style.display = \"block\";\n//                             app.style.display = \"block\";\n//                         }\n//                     })\n//                     parentEl.addEventListener('mouseleave', event =>{\n//                         //pricetag.current.style.display = \"none\";\n//                         app.style.display = \"none\";\n//                         setPrice();\n//                     })\n//                     list.push(classname);\n//                     // console.log(list);\n//                     // console.log('$ node');\n//                     // console.log (\"classname: \", classname);\n//                 }\n//             }\n//             //console.log('no $');\n//             if (node.hasChildNodes()){\n//                 let children = node.childNodes;  \n//                 for (let i = 0; i < children.length; i++){\n//                     findDollarSign(children[i]);\n//                 }      \n//             }\n//         }\n       \n\n//         /* Find value after the dollar sign and multiply by tax. Returns null if there is no price \n//         after the dollar sign.\n//         Parameters: \n//         text is text after the dollar sign\n//         tax is the tax rate (e.g 1.08)\n//         Precondition: text is a string */\n//         function findPrice(text, tax){\n//             let price = '';\n//             for(let i = 0; i<text.length; i++){\n//                 let ascii = text.charCodeAt(i);\n//                 if (ascii === 32 || ascii === 44 || ascii === 46 || (48 <= ascii && ascii <= 57)){\n//                     if (ascii !== 44) price = price + text.substr(i,1);\n//                 }\n//                 else{\n//                     break;\n//                 }\n//             }\n\n//             let value = (parseFloat(price) * tax);\n//             //console.log(\"price:\", value);\n\n//             if(isNaN(price)) return null;\n\n            \n\n//             const whole = Math.floor(value).toString();\n//             //console.log(\"whole:\", whole);\n//             const dec = (value - whole).toFixed(2).toString().slice(1);\n//             //console.log(\"dec:\", dec);\n//             price = commatize(whole) + dec;\n\n//             return price;\n//         }\n\n\n//         function commatize(price){\n//             if(price.length<4){\n//                 return price;\n//             }\n//             let lastThree = price.slice(-3);\n//             let begin = commatize(price.slice(0,-3));\n//             return begin + ',' + lastThree;\n//         }\n\n\n\n//         var list =[];\n\n//         findDollarSign(document);\n//         return list;\n//     }\n\n    \n\n    \n\n//     return (\n//         <Frame head={[<link type=\"text/css\" rel=\"stylesheet\" href={chrome.runtime.getURL(\"/static/css/content.css\")} ></link>]}> \n//             <FrameContextConsumer>\n//                 {\n//                     ({document, window}) => {\n//                         return(\n//                             <div className='my-extension'>\n//                                 <h1>{price}</h1>\n//                             </div>\n//                         )\n//                     }\n//                 }\n            \n                \n//             </FrameContextConsumer>\n//         </Frame>\n\n        \n        \n//     )\n\n// }\n\n// const app = document.createElement('div');\n// app.id = \"my-extension-root\";\n// document.body.appendChild(app);\n// ReactDOM.render(<Tax/>, app);\n// app.style.display = \"none\";\n\n// document.addEventListener('mousemove', saveMousePos);\n\n// function saveMousePos(event) {\n//     // console.log(event.pageX)\n//     // console.log(event.pageY)\n//     var app = document.getElementById(\"my-extension-root\");\n//     app.style.position = \"absolute\";\n//     app.style.left = event.pageX+'px';\n//     app.style.top = event.pageY+'px';\n// }\n\n\n/* <Frame head={[<link type=\"text/css\" rel=\"stylesheet\" href={chrome.runtime.getURL(\"/static/css/content.css\")} ></link>]}> \n            <FrameContextConsumer>\n            \n                \n            </FrameContextConsumer>\n        </Frame> */\n\n// {\n//     // Callback is invoked with iframe's window and document instances\n//         //({document, window}) => {\n//             // Render Children\n            \n           \n            \n//         //}\n//     }"]},"metadata":{},"sourceType":"module"}