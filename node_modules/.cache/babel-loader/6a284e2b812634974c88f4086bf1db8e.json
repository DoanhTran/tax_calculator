{"ast":null,"code":"import _slicedToArray from\"/Users/doanhtran/Downloads/GitHub/tax-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// import logo from \"./logo.svg\";\nimport\"./App.css\";import InputBox from\"./components/inputbox/inputBox\";import ReportForm from\"./components/reportForm\";/*global chrome*/function App(){var PRICE=\"price\";var _useState=useState(),_useState2=_slicedToArray(_useState,2),taxRate=_useState2[0],setTaxRate=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),whitelist=_useState4[0],setWhiteList=_useState4[1];chrome.storage.sync.get('currentTax',function(result){// console.log(\"get data is called\");\n// console.log('Value currently is ' + result.currentTax);\n// console.log(result)\n// console.log(result.currentTax)\nif(result.currentTax!==undefined){//setZipcode(result.currentTax.zip);\n//setSave(null);\n//updateTax(result.currentTax.rate);\nsetTaxRate(parseFloat(result.currentTax.rate));}});useEffect(function(){chrome.tabs.query({active:true,currentWindow:true},function(tabs){chrome.tabs.sendMessage(tabs[0].id,{type:PRICE,tax:taxRate,whitelist:whitelist},function(response){console.log(\"save response\",response.save);});});},[taxRate]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InputBox,{updateTax:function updateTax(tax){return setTaxRate(parseFloat(tax)+1);}}),/*#__PURE__*/React.createElement(ReportForm,null));}export default App;","map":{"version":3,"sources":["/Users/doanhtran/Downloads/GitHub/tax-calculator/src/App.js"],"names":["React","useState","useEffect","InputBox","ReportForm","App","PRICE","taxRate","setTaxRate","whitelist","setWhiteList","chrome","storage","sync","get","result","currentTax","undefined","parseFloat","rate","tabs","query","active","currentWindow","sendMessage","id","type","tax","response","console","log","save"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA;AACA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAEA,iBACA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAIC,CAAAA,KAAK,CAAG,OAAZ,CADa,cAEiBL,QAAQ,EAFzB,wCAENM,OAFM,eAEGC,UAFH,8BAGqBP,QAAQ,CAAC,IAAD,CAH7B,yCAGNQ,SAHM,eAGKC,YAHL,eAKbC,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CAAwB,YAAxB,CAAsC,SAASC,MAAT,CAAiB,CACrD;AACA;AACA;AACA;AACA,GAAIA,MAAM,CAACC,UAAP,GAAoBC,SAAxB,CAAkC,CAChC;AACA;AACA;AACAT,UAAU,CAACU,UAAU,CAACH,MAAM,CAACC,UAAP,CAAkBG,IAAnB,CAAX,CAAV,CACD,CACH,CAXA,EAcAjB,SAAS,CAAC,UAAI,CACZS,MAAM,CAACS,IAAP,CAAYC,KAAZ,CAAkB,CAACC,MAAM,CAAE,IAAT,CAAeC,aAAa,CAAE,IAA9B,CAAlB,CAAuD,SAASH,IAAT,CAAe,CACpET,MAAM,CAACS,IAAP,CAAYI,WAAZ,CAAwBJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,EAAhC,CAAoC,CAACC,IAAI,CAAEpB,KAAP,CAAcqB,GAAG,CAAEpB,OAAnB,CAA4BE,SAAS,CAAEA,SAAvC,CAApC,CAAuF,SAASmB,QAAT,CAAmB,CACtGC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BF,QAAQ,CAACG,IAAtC,EACH,CAFD,EAGD,CAJD,EAKD,CANQ,CAMP,CAACxB,OAAD,CANO,CAAT,CAQA,mBACE,4CACE,oBAAC,QAAD,EAAU,SAAS,CAAI,mBAACoB,GAAD,QAAOnB,CAAAA,UAAU,CAACU,UAAU,CAACS,GAAD,CAAV,CAAgB,CAAjB,CAAjB,EAAvB,EADF,cAEE,oBAAC,UAAD,MAFF,CADF,CAMD,CAED,cAAetB,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport InputBox from \"./components/inputbox/inputBox\";\nimport ReportForm from \"./components/reportForm\";\n\n/*global chrome*/\nfunction App() {\n  var PRICE = \"price\";\n  const [taxRate, setTaxRate] = useState();\n  const [whitelist, setWhiteList] = useState(true);\n\n  chrome.storage.sync.get('currentTax', function(result) {\n    // console.log(\"get data is called\");\n    // console.log('Value currently is ' + result.currentTax);\n    // console.log(result)\n    // console.log(result.currentTax)\n    if (result.currentTax!==undefined){\n      //setZipcode(result.currentTax.zip);\n      //setSave(null);\n      //updateTax(result.currentTax.rate);\n      setTaxRate(parseFloat(result.currentTax.rate));\n    }\n })\n\n  \n  useEffect(()=>{\n    chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n      chrome.tabs.sendMessage(tabs[0].id, {type: PRICE, tax: taxRate, whitelist: whitelist}, function(response) {\n          console.log(\"save response\", response.save);\n      }); \n    });   \n  },[taxRate]);\n\n  return (\n    <div>\n      <InputBox updateTax = {(tax)=>setTaxRate(parseFloat(tax)+1)}/>\n      <ReportForm />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}