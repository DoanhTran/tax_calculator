{"ast":null,"code":"import _slicedToArray from\"/Users/doanhtran/Downloads/GitHub/tax-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*global chrome*/import React,{useEffect,useState}from'react';import ReactDOM from'react-dom';import\"./content.css\";function Tax(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),price=_useState2[0],setPrice=_useState2[1];useEffect(function(){chrome.extension.onMessage.addListener(function(request,sender,sendResponse){console.log('received some info');setPrice(request.price);getDOM(price);sendResponse({save:true});});});function getDOM(tax){//var list = []\nfunction findDollarSign(node){if(node.nodeType===3){var dollarIndex=node.nodeValue.indexOf('$');if(dollarIndex!==-1){//list.append(node);\nvar parentEl=node.parentElement;var classname=parentEl.className;var _price=findPrice(node.nodeValue.slice(dollarIndex+1),1.08);var original=node.nodeValue;parentEl.addEventListener('mouseenter',function(event){_price===null?node.nodeValue=original:node.nodeValue='$'+_price;});parentEl.addEventListener('mouseleave',function(event){node.nodeValue=original;});list.push(classname);// console.log(list);\n// console.log('$ node');\n// console.log (\"classname: \", classname);\n}}//console.log('no $');\nif(node.hasChildNodes()){var children=node.childNodes;for(var i=0;i<children.length;i++){findDollarSign(children[i]);}}}/* Find value after the dollar sign and multiply by tax. Returns null if there is no price \n        after the dollar sign.\n        Parameters: \n        text is text after the dollar sign\n        tax is the tax rate (e.g 1.08)\n        Precondition: text is a string */function findPrice(text,tax){// let price = '';\n// for(let i = 0; i<text.length; i++){\n//     let ascii = text.charCodeAt(i);\n//     if (ascii in (32, 44, 46) || (48 <= ascii && ascii <= 57)){\n//         if (ascii !== 44) price = price + text.substr(i,1);\n//     }\n//     else{\n//         break;\n//     }\n// }\nvar price=(parseFloat(text)*tax).toFixed(2);console.log(\"price:\",price);return isNaN(price)?null:price;}var list=[];findDollarSign(document);return list;}// useEffect(()=>{\n//     if (price === 5){\n//         chrome.tabs.query({active: true}, function(tabs) {\n//             var tab = tabs[0];\n//             //tab_title.current = tab.title;\n//             //hmm getting the body node\n//             chrome.tabs.executeScript(tab.id, {\n//                 code: '('+getDOM+')()'\n//             }, printresult);\n//         });\n//     }\n// }, [price])\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"my-extension\"},/*#__PURE__*/React.createElement(\"h1\",null,\"This is the tax rate: \",price));}var app=document.createElement('div');app.id=\"my-extension-root\";document.body.appendChild(app);ReactDOM.render(/*#__PURE__*/React.createElement(Tax,null),app);","map":{"version":3,"sources":["/Users/doanhtran/Downloads/GitHub/tax-calculator/src/content.js"],"names":["React","useEffect","useState","ReactDOM","Tax","price","setPrice","chrome","extension","onMessage","addListener","request","sender","sendResponse","console","log","getDOM","save","tax","findDollarSign","node","nodeType","dollarIndex","nodeValue","indexOf","parentEl","parentElement","classname","className","findPrice","slice","original","addEventListener","event","list","push","hasChildNodes","children","childNodes","i","length","text","parseFloat","toFixed","isNaN","document","app","createElement","id","body","appendChild","render"],"mappings":"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","sourcesContent":[" /*global chrome*/\nimport React, {useEffect, useState} from 'react'; \nimport ReactDOM from 'react-dom';\nimport \"./content.css\";\n\n\nfunction Tax() {\n\n    const [price, setPrice] = useState(0)\n\n    useEffect(() => {\n        chrome.extension.onMessage.addListener(\n            function(request, sender, sendResponse) {\n                console.log('received some info');\n                setPrice(request.price)\n                getDOM(price);\n                sendResponse({save: true});\n                \n            });\n    })\n\n\n    function getDOM(tax){\n        //var list = []\n\n        function findDollarSign(node){\n            \n            \n            if (node.nodeType === 3){\n                const dollarIndex = node.nodeValue.indexOf('$')\n                if(dollarIndex !== -1  ) {\n                \n                    //list.append(node);\n                    const parentEl = node.parentElement\n                    const classname = parentEl.className;\n\n                    const price = findPrice(node.nodeValue.slice(dollarIndex+1), 1.08)\n                    const original = node.nodeValue;\n                    parentEl.addEventListener('mouseenter', event => {\n                        price === null ? node.nodeValue = original : node.nodeValue = '$' + price;\n                    })\n                    parentEl.addEventListener('mouseleave', event =>{\n                        node.nodeValue = original;\n                    })\n                    list.push(classname);\n                    // console.log(list);\n                    // console.log('$ node');\n                    // console.log (\"classname: \", classname);\n                }\n            }\n            //console.log('no $');\n            if (node.hasChildNodes()){\n                let children = node.childNodes;  \n                for (let i = 0; i < children.length; i++){\n                    findDollarSign(children[i]);\n                }      \n            }\n        }\n       \n\n        /* Find value after the dollar sign and multiply by tax. Returns null if there is no price \n        after the dollar sign.\n        Parameters: \n        text is text after the dollar sign\n        tax is the tax rate (e.g 1.08)\n        Precondition: text is a string */\n        function findPrice(text, tax){\n            // let price = '';\n            // for(let i = 0; i<text.length; i++){\n            //     let ascii = text.charCodeAt(i);\n            //     if (ascii in (32, 44, 46) || (48 <= ascii && ascii <= 57)){\n            //         if (ascii !== 44) price = price + text.substr(i,1);\n            //     }\n            //     else{\n            //         break;\n            //     }\n            // }\n            let price = (parseFloat(text) * tax).toFixed(2);\n            console.log(\"price:\", price);\n\n            return (isNaN(price) ? null : price);\n        }\n        var list =[];\n\n        findDollarSign(document);\n        return list;\n    }\n\n    // useEffect(()=>{\n    //     if (price === 5){\n    //         chrome.tabs.query({active: true}, function(tabs) {\n    //             var tab = tabs[0];\n    //             //tab_title.current = tab.title;\n\n    //             //hmm getting the body node\n    //             chrome.tabs.executeScript(tab.id, {\n    //                 code: '('+getDOM+')()'\n    //             }, printresult);\n    //         });\n    //     }\n    // }, [price])\n    \n\n\n\n    return (\n        <div className='my-extension'>\n            <h1>This is the tax rate: {price}</h1>\n        </div>\n    )\n\n}\n\nconst app = document.createElement('div');\napp.id = \"my-extension-root\";\ndocument.body.appendChild(app);\nReactDOM.render(<Tax />, app);"]},"metadata":{},"sourceType":"module"}