{"ast":null,"code":"var _jsxFileName = \"/Users/doanhtran/Downloads/GitHub/tax-calculator/src/components/inputbox/inputBox.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport './inputBox.css';\nexport default function InputBox() {\n  const [zipcode, setZipcode] = useState();\n\n  const handleOnChange = event => {\n    const input = event.currentTarget.value;\n    setZipcode(onlyNum(input));\n  };\n  /* Extract only numbers out of input box and returns a string of text \n  containing at most 6 numbers\n  Parameter: text is a string\n  Returns a string of only numbers or empty string*/\n\n\n  function onlyNum(text) {\n    let lastChar = text.slice(-1);\n    let ascii = lastChar.charCodeAt(0);\n\n    if (48 <= ascii && ascii <= 57) {\n      return text;\n    } else {\n      return text.slice(0, -1);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    maxLength: \"5\",\n    value: zipcode,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/doanhtran/Downloads/GitHub/tax-calculator/src/components/inputbox/inputBox.jsx"],"names":["React","useState","useEffect","InputBox","zipcode","setZipcode","handleOnChange","event","input","currentTarget","value","onlyNum","text","lastChar","slice","ascii","charCodeAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAE/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;;AAEA,QAAMK,cAAc,GAAIC,KAAD,IAAW;AAC9B,UAAMC,KAAK,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAlC;AACAL,IAAAA,UAAU,CAACM,OAAO,CAACH,KAAD,CAAR,CAAV;AAEH,GAJD;AAOA;;;;;;AAIA,WAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,CAAf;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAACG,UAAT,CAAoB,CAApB,CAAZ;;AAEA,QAAI,MAAMD,KAAN,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AAChC,aAAOH,IAAP;AACC,KAFD,MAEO;AACP,aAAOA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACC;AACJ;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAG,MADX;AAEI,IAAA,SAAS,EAAG,GAFhB;AAGI,IAAA,KAAK,EAAIV,OAHb;AAII,IAAA,QAAQ,EAAIE,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport './inputBox.css';\n\nexport default function InputBox (){\n\n    const [zipcode, setZipcode] = useState();\n\n    const handleOnChange = (event) => {\n        const input = event.currentTarget.value;\n        setZipcode(onlyNum(input));\n\n    }\n\n\n    /* Extract only numbers out of input box and returns a string of text \n    containing at most 6 numbers\n    Parameter: text is a string\n    Returns a string of only numbers or empty string*/\n    function onlyNum(text) {\n        let lastChar = text.slice(-1);\n        let ascii = lastChar.charCodeAt(0);\n\n        if (48 <= ascii && ascii <= 57) {\n        return text;\n        } else {\n        return text.slice(0, -1);\n        }\n    }\n      \n    return(\n        <div>\n            <input\n                type = \"text\"\n                maxLength = \"5\"\n                value = {zipcode}\n                onChange = {handleOnChange}\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}